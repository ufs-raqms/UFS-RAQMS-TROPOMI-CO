module raqmschem_iodata_mod
#include <options.h>
  use chem_rc_mod
  use chem_types_mod
  use raqmschem_io_mod
  use chem_comm_mod
  use raqmschem_model_mod, only : raqmschem_model_get
  use raqmschem_model_mod, only : chem_config_type => raqmschem_config_type
  use raqmschem_model_mod, only : chem_model_domain_get
  use raqmschem_config_mod
  use raqmschem_data_mod, only : chem_data_type
  use raqmschemcomm_mod
!  use raqmschem_data_mod

  implicit none 

  private

  public :: raqmschem_backgd_init
  public :: raqmschem_backgd_read
  public :: raqmschem_backgd_write
  public :: raqmschem_chem_write
  public :: raqmschem_chem_write_o3vmr
  public :: raqmschem_chem_writer4
  public :: raqmschem_chem_write_debug
  public :: raqmschem_chem_write_var
  public :: raqmschem_chem_write_var_2d
#ifdef WETDEPDIAG
  public :: raqmschem_wetdepdiag_write
#endif
contains
  subroutine raqmschem_backgd_init(rc)
    use raqmschem_pmgrid_mod
!    use raqmschemcomm_mod, only : allocatechemcommperm
    integer, optional, intent(out) :: rc

    ! -- local variables
    integer :: localrc
    integer :: de, deCount
    integer :: ids, ide, jds, jde,mype,jts,jte,its,ite
    integer :: ncin,platin,begjin,endjin,nmonHTAPin,iamin,plevin
    type(chem_data_type),   pointer :: data   => null()
    type(chem_config_type), pointer :: config => null()

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS
!    write(6,*)'chem_model_get'
!    call flush(6)
    call chem_comm_get(localpe=mype, rc=localrc)
    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
!    write(6,*)'did chem_model_get',decount
!    call flush(6)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    do de = 0, deCount-1
      call raqmschem_model_get(de=de, data=data, tile=tile,rc=localrc)
!      write(6,*)'did raqmschem_model_get localrc',localrc
!      call flush(6)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
!      write(6,*)'call chem_model_odmain_get'
!      call flush(6)
      call chem_model_domain_get(de=de, ids=ids, ide=ide, jds=jds, jde=jde, its=its,ite=ite, &
        jts=jts,jte=jte,nl=plevin, rc=localrc)
!      write(6,*)'did chem_model_domain_get',localrc
!      call flush(6)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      ncin=ide-ids+1
!      write(6,*)'ncin',ncin,'ids',ids,ide,'its',its,ite,jts,jte
!      call flush(6)
      platin=jte-jts+1
      begjin=jds
      endjin=jde
      nmonHTAPin=12
      iamin=mype
!      if(mype.eq.0)write(6,*)'init mpgrid nl',plevin

      call initraqmschem_pmgrid(ncin,platin,plevin,begjin,endjin,ids,ide,nmonHTAPin,iamin)
!      write(6,*)'allocatechemcommperm'
!      call flush(6)
      call allocatechemcommperm(its,ite,jts,jte)

      ! -- srcco_totl
!      write(6,*)'allocated',allocated(data%srcco_totl)
!      call flush(6)
!      write(6,*)'shape srcco_totl',shape(srcco_totl)
!      write(6,*)'lbound',lbound(srcco_totl)
!      write(6,*)'ubound',ubound(srcco_totl)
!      write(6,*)'ids',ids,ide,'jds',jds,jde
!      call flush(6)
    end do
!    write(6,*)'bottom backgd_init'
!    call flush(6)
!    write(6,*)'bottom backgd_init'
!    call flush(6)

    return
  end subroutine raqmschem_backgd_init
  subroutine raqmschem_backgd_read(yy,mm,dd,bigendian,rc)
    use chem_types_mod
    use raqmschem_pmgrid_mod, only : prefi,iam
    use raqmschem_const_mod, only : mw_so4_aer,avgro,mw_co
    use raqmschemcomm_mod, only : plumerisefire_frq
    integer, optional, intent(out) :: rc
    integer, intent(in) :: yy ! yyyy year
    integer, intent(in) :: mm ! month
    integer, intent(in) :: dd ! day
  
    logical,optional,intent(in) :: bigendian
    

    ! -- local variables
    character *2 cmonth(2),file*256,cday*2,yyyy*4,yyyymm*6,yyyymmdd*8,cmm*2
    integer its,ite,jts,jte
    integer :: localrc,imonth(2)
    integer :: de, deCount, localpe, tile
    type(chem_data_type),   pointer :: data => null()
    type(raqmschem_config_type), pointer :: config => null()
!    real(CHEM_KIND_R4),allocatable :: srcco_totl(:,:),srcnind(:,:)
    integer ids,ide,jds,jde,recrange(2),m
    real(chem_KIND_R4),allocatable,dimension(:,:) :: srcin
    real(chem_KIND_R4),allocatable,dimension(:,:,:) :: srcin3d,srcinair
    logical exist
    logical :: debug=.false.
!    logical :: debug=.true.
    real(CHEM_KIND_R4) :: rad,pi
!    write(6,*)'top of read'
!    call flush(6)
    pi=4.*atan(1.)
    rad=pi/180.
    write(cday,'(i2.2)')dd
    write(yyyy,'(i4.4)')yy
    write(cmm,'(i2.2)')mm
    yyyymm=yyyy//cmm
    yyyymmdd=yyyymm//cday
    
    cmonth=' '
    if(mm<10)then
      write(cmonth(1:1),'(i1.1)')mm
    else
      write(cmonth,'(i2.2)')mm
    endif
    imonth(1)=mm
    if(mm.eq.12)then
      imonth(2)=1
    else
      imonth(2)=mm+1
    endif
    if(imonth(2)<10)then
      write(cmonth(2)(1:1),'(i1.1)')imonth(2)
    else
      write(cmonth(2),'(i2.2)')imonth(2)
    endif
    recrange=3
!    write(6,*)'cmonth',cmonth,'imonth',imonth
!    call flush(6)

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
    if(decount>0)then
      prefi=trim(config%emi_inname)//'/Input/'
    endif

    do de = 0, deCount-1
      call raqmschem_model_get(de=de, data=data, tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      call chem_model_domain_get(de=de, ids=ids, ide=ide, jds=jds, jde=jde, & 
       its=its,ite=ite,jts=jts,jte=jte)


        ! -- dust erosion factors
        allocate (srcin(ide-ids+1,jds:jde))
        allocate (srcin3d(ide-ids+1,jds:jde,12))
        allocate (srcinair(ide-ids+1,jds:jde,nlnair))
    if(.not.allocated(data%plume))then
!      write(6,*)'allocate num_plume_data',config%num_plume_data
!      call flush(6)
      allocate (data%plume(ids:ide,jds:jde,config%num_plume_data))
      data%num_plume_data=config%num_plume_data
!      write(6,*)'did allocate ',ids,ide,jds,jde
!      call flush(6)
      data%plume=0._CHEM_KIND_R4
    endif
        do m=1,2
          call chem_io_read('edgar_HTAP_CO_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin, path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
!          write(6,*)'srcco_totl lb ',lbound(srcco_totl),'ub ',ubound(srcco_totl)
          srcco_totl(:,:,imonth(m))=srcin
!        write(6,*)'chem_io_read',localrc
!        call flush(6)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," co - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcco_totl(:,:,9)), maxval(srcco_totl(:,:,9))
          endif
        call chem_io_read('edgar_HTAP_NOX_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
         srcnind(:,:,imonth(m))=srcin
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," nox - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcnind(:,:,9)), maxval(srcnind(:,:,9))
          endif
!       ethane
        file='edgar_HTAP_ethane_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat'
!        inquire(file=trim(config%emi_inname)//file,exist=exist)
!        if(exist)then
        call chem_io_read(file, srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
!        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) then
          write(6,*)'file not there',trim(config%emi_inname)//trim(file)
        else
          srcethane(:,:,imonth(m))=srcin
         if(debug)then
          write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," ethane - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcethane), maxval(srcethane)
          endif
        endif
!       ethene
        call chem_io_read('edgar_HTAP_ethene_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcethene(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," ethene - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcethene), maxval(srcethene)
          call flush(6)
        endif
!       propane
        call chem_io_read('edgar_HTAP_propane_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcpropane(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," propane - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcpropane), maxval(srcpropane)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_butane_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcbutane(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," butane - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcbutane), maxval(srcbutane)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_pentane_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcpentane(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," pentane - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcpentane), maxval(srcpentane)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_hexane_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srchexane(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," hexane - min/max = "2g16.6)') localpe, de, &
          tile, minval(srchexane), maxval(srchexane)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_propene_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcpropene(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," propene - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcpropene), maxval(srcpropene)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_ch2o_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcch2o(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," ch2o - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcch2o), maxval(srcch2o)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_ald_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcald(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," ald - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcald), maxval(srcald)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_alkanone_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcalkanone(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," alkanone - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcalkanone), maxval(srcalkanone)
          call flush(6)
        endif
        call chem_io_read('edgar_HTAP_isop_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcisop(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," isop - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcisop), maxval(srcisop)
        endif
        call chem_io_read('edgar_HTAP_terp_emi_molpercm2persec_2010_'//trim(cmonth(m))//'.dat', srcin,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,bigendian=bigendian,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
         srcterp(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," terp - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcterp), maxval(srcterp)
        endif
      end do
!     now do non month sources
!     surface oragphy
      file='oro_data.nc'
      call chem_io_read(file,zsurf, &
           path=trim(config % emi_inname), de=de, recrange=recrange,varname='orog_raw',rc=localrc)
!      write(6,*)'orog raw',maxval(zsurf),minval(zsurf)
!      call flush(6)
!      file='edgar_HTAP_CO_emi_molpercm2persec_AIR_2010_Annual.nc'
      file='edgar_HTAP_CO_emi_molpercm2persec_AIR_2010.nc'
!      inquire(file=trim(config%emi_inname)//file,exist=exist)
!      if(exist)then
      call chem_io_read(file,srcinair,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,varname='coair',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        srccoair=srcinair
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," srccoair - min/max = "2g16.6)') localpe, de, &
          tile, minval(srccoair), maxval(srccoair)
        endif
      endif
!      file='edgar_HTAP_NOx_emi_molpercm2persec_AIR_2010_Annual.nc'
      file='edgar_HTAP_NOx_emi_molpercm2persec_AIR_2010.nc'
!      inquire(file=trim(config%emi_inname)//file,exist=exist)
!      if(exist)then
      call chem_io_read(file,srcinair,  &
           path=trim(config % emi_inname), de=de, recrange=recrange,varname='noxair',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        srcnair=srcinair
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," srcnair - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcnair), maxval(srcnair)
          call flush(6)
        endif
      endif
      file='ch4_mean_2000-2004_cmdl_uwhyb.nc'
!        inquire(file=trim(config%emi_inname)//file,exist=exist)
!        if(exist)then
      call chem_io_read('ch4_mean_2000-2004_cmdl_uwhyb.nc', srcin3d,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname='ch4_mean',rc=localrc)
!        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        ch4clim=srcin3d
!        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," ch4clim - min/max = "2g16.6)') localpe, de, &
        tile, minval(ch4clim), maxval(ch4clim)
!        endif
      endif
      file='upd_bb_nox.nc'
!        inquire(file=trim(config%emi_inname)//file,exist=exist)
!        if(exist)then
      call chem_io_read(file,srcin3d,  &
          path=trim(config % emi_inname), de=de, recrange=recrange,varname='bb_nox',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        srcnbio=srcin3d
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," upd_bb_nox - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcnbio), maxval(srcnbio)
        endif
      endif
!        file='upd_nox_soil_geia_uwhyb_BE_ALL.'//trim(cmonth(m))//'.dat'
      file='upd_nox_soil_geia.nc'
!        inquire(file=trim(config%emi_inname)//file,exist=exist)
!        if(exist)then
      call chem_io_read(file,srcin3d,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname='upd_nox_soil_geia',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        srcnsoil=srcin3d
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," upd_nox_soil - min/max = "2g16.6)') localpe, de, &
          tile, minval(srcnsoil), maxval(srcnsoil)
        endif
      endif
      file='larc.deposition.nc'
      call chem_io_read(file,srcin3d,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname='depo3',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        dpo3=srcin3d
!        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," dpo3 - min/max = "2g16.6)') localpe, de, &
          tile, minval(dpo3), maxval(dpo3)
!        endif
      endif
!      write(6,*)'dpo3 9 ',maxval(dpo3(:,:,9)),minval(dpo3(:,:,9))
      call chem_io_read(file,srcin3d,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname='dephno3',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        dphno3=srcin3d
!        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," dephno3 - min/max = "2g16.6)') localpe, de, &
          tile, minval(dphno3), maxval(dphno3)
         call flush(6)
!        endif
      endif
      call chem_io_read(file,srcin3d,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname='deph2o2',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        dph2o2=srcin3d
!        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," deph2o2 - min/max = "2g16.6)') localpe, de, &
          tile, minval(dph2o2), maxval(dph2o2)
         call flush(6)
!        endif
      endif
      call chem_io_read(file,srcin3d,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname='dpno2',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        dpno2=srcin3d
!        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," dpno2 - min/max = "2g16.6)') localpe, de, &
          tile, minval(dpno2), maxval(dpno2)
         call flush(6)
!        endif
      endif
      call chem_io_read(file,srcin3d,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname='dpco',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
         call flush(6)
      else
        dpco=srcin3d
!        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," depco - min/max = "2g16.6)') localpe, de, &
          tile, minval(dpco), maxval(dpco)
         call flush(6)
!        endif
      endif
#if 0
      file='upd_nox_lghtn_uwhyb_BE_ALL.'//trim(cmonth(m))//'.dat'
!        inquire(file=trim(config%emi_inname)//file,exist=exist)
!        if(exist)then
      call chem_io_read(file,srcin,  &
         path=trim(config % emi_inname), de=de, recrange=recrange,varname=' ',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//trim(file)
      else
        slghtng(:,:,imonth(m))=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," upd_nox_lghtn - min/max = "2g16.6)') localpe, de, &
            tile, minval(slghtng(:,:,imonth(m))), maxval(slghtng(:,:,imonth(m)))
         call flush(6)
        endif
      endif
#endif
      file='fireheight_bbco_Dv7.nc'
!        inquire(file=trim(config%emi_inname)//file,exist=exist)
!        if(exist)then
      call chem_io_read(file,srcin,  &
!         path=trim(config % emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/', de=de, recrange=recrange,varname='firehtkm_D',rc=localrc)
         path=trim(config % emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/', de=de, recrange=recrange,varname='firehtkm',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/'//trim(file)
        call flush(6)
      else
        firehtkm_d=srcin
!        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," firehtkm_d - min/max = "2g16.6)') localpe, de, &
          tile, minval(firehtkm_d), maxval(firehtkm_d)
         call flush(6)
!        endif
      endif
      file='fireheight_bbco_Nv7.nc'
!        inquire(file=trim(config%emi_inname)//file,exist=exist)
!        if(exist)then
      call chem_io_read(file,srcin,  &
!         path=trim(config % emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/', de=de, recrange=recrange,varname='firehtkm_N',rc=localrc)
         path=trim(config % emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/', de=de, recrange=recrange,varname='firehtkm',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/'//trim(file)
        call flush(6)
      else
        firehtkm_n=srcin
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," firehtkm_n - min/max = "2g16.6)') localpe, de, &
          tile, minval(firehtkm_n), maxval(firehtkm_n)
         call flush(6)
        endif
      endif
      write(6,*)'fireemi ',trim(config % fireemi_inname)
      call flush(6)
      if(config % fireemi_inname(1:6).eq.'GBBEPx')then
!      using GGBEPx files instead
        file='ebu_co.nc'
        call chem_io_read(file,srcin,  &
         path=trim(config % fireemi_inname), de=de, recrange=recrange,varname='bb_co',rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
          write(6,*)'file not there',trim(config%fireemi_inname)//trim(file)
          call flush(6)
        else
!         units in is KG need to convert to molecules
!         kg * (mole/mwco g)*(avgro molecules/mole)*(1000g/kg)*(m2/10000cm2)
!         .1* AVGRO*Kg=molecules
          srcin=srcin*.1*avgro/mw_co
          bbco_d=srcin
          bbco_n=srcin
!          if(debug)then
            write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," bbco_d - min/max = "2g16.6)') localpe, de, &
            tile, minval(bbco_d), maxval(bbco_d)
            call flush(6)
!           endif
        endif
!        write(6,*)'plumerise',config%plumerise_flag
!        call flush(6)
!        write(6,*)'now plume'
!        call flush(6)
        doplumerise=.false.
        if(config%plumerise_flag.eq.2)then
          file='plumefrp.nc'
          doplumerise=.true.
          plumerisefire_frq=config%plumerisefire_frq
          call chem_io_read(file,srcin,  &
          path=trim(config % fireemi_inname), de=de, recrange=recrange,varname='plumefrp',rc=localrc)
          data%plume(:,:,1)=srcin
          if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
            write(6,*)'error plume'
            write(0,*)'error plume'
            call flush(6)
            call flush(0)
          endif
        endif
        file='bb_emiss_ratios.nc'
!        write(6,*)'shape bbefac',shape(bbefac)
        call chem_io_read(file,bbefac,  &
        path=trim(config % fireemi_inname)//'/Inputfire/', de=de, recrange=recrange,varname='bb_emiss_ratios',rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
          write(6,*)'file not there',trim(config%emi_inname)//'/Inputfire/'//trim(file)
        else
          if(debug)then
            write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," bb_emiss_ratios - min/max = "2g16.6)') localpe, de, &
            tile, minval(bbefac), maxval(bbefac)
          endif
        endif
!        write(6,*)'bbefac 1',maxval(bbefac(:,:,1)),' localrc',localrc,minval(bbefac(:,:,1))
!        write(6,*)'bbefac 2',maxval(bbefac(:,:,2)),' localrc',localrc,minval(bbefac(:,:,2))
        file='bb_co_scale_factor.nc'
        call chem_io_read(file,scale_factor,  &
        path=trim(config % emi_inname)//'/Inputfire/', de=de, recrange=recrange,varname='bb_co_scale_factor',rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
          write(6,*)'file not there',trim(config%emi_inname)//'/Inputfire/'//trim(file)
        else
          if(debug)then
            write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," bb_co_scale_factor - min/max = "2g16.6)') localpe, de, &
            tile, minval(scale_factor), maxval(scale_factor)
          endif
        endif
      else

!       using raqms files
        file='fireheight_bbco_Dv7.nc'
!       file='modis_Dv7_bb_co_fuel_BE.nc'
        call chem_io_read(file,srcin,  &
!         path=trim(config % fireemi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/', de=de, recrange=recrange,varname='bb_co_D',rc=localrc)
         path=trim(config % fireemi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/', de=de, recrange=recrange,varname='bb_co',rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
          write(6,*)'file not there',trim(config%emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/'//trim(file)
          call flush(6)
        else
          bbco_d=srcin
          if(debug)then
            write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," bbco_d - min/max = "2g16.6)') localpe, de, &
            tile, minval(bbco_d), maxval(bbco_d)
            call flush(6)
          endif
          file='fireheight_bbco_Nv7.nc'
          call chem_io_read(file,srcin,  &
          path=trim(config % fireemi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/', de=de, recrange=recrange,varname='bb_co',rc=localrc)
          if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
            write(6,*)'file not there',trim(config%emi_inname)//'/BB_CO/'//yyyy//'/'//yyyymmdd//'/'//trim(file)
            call flush(6)
          else
            bbco_n=srcin
            if(debug)then
              write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," bbco_n - min/max = "2g16.6)') localpe, de, &
              tile, minval(bbco_d), maxval(bbco_d)
            endif
          endif
        endif
        file='bb_emiss_ratios.nc'
        write(6,*)'shape bbefac',shape(bbefac)
        call chem_io_read(file,bbefac,  &
         path=trim(config % fireemi_inname)//'/Inputfire/', de=de, recrange=recrange,varname='bb_emiss_ratios',rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
          write(6,*)'file not there',trim(config%emi_inname)//'/Inputfire/'//trim(file)
        else
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," bb_emiss_ratios - min/max = "2g16.6)') localpe, de, &
          tile, minval(bbefac), maxval(bbefac)
        endif
        endif
      endif
      write(6,*)'bbefac 1',maxval(bbefac(:,:,1)),' localrc',localrc,minval(bbefac(:,:,1))
      write(6,*)'bbefac 2',maxval(bbefac(:,:,2)),' localrc',localrc,minval(bbefac(:,:,2))
      file='bb_co_scale_factor.nc'
      call chem_io_read(file,scale_factor,  &
         path=trim(config % emi_inname)//'/Inputfire/', de=de, recrange=recrange,varname='bb_co_scale_factor',rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc))then
        write(6,*)'file not there',trim(config%emi_inname)//'/Inputfire/'//trim(file)
      else
        if(debug)then
        write(6,'("chem_backgd_read: PET:",i4," DE:",i2," tile=",i2," bb_co_scale_factor - min/max = "2g16.6)') localpe, de, &
          tile, minval(scale_factor), maxval(scale_factor)
        endif
      endif
      deallocate (srcin)
      deallocate (srcin3d,srcinair)
!     now read in vort angle files
!      file='angle.nc'
!      call chem_io_read(file,angledx,ite,jte, path='INPUT/',varname='angle_dx',rc=localrc)
!      call chem_io_read(file,angledy,ite,jte, path='INPUT/',varname='angle_dy',rc=localrc)
!      if(iam.eq.0)then
!        write(6,*)'angledx',tile,maxval(angledx),minval(angledx)
!        write(6,*)'angledy',tile,maxval(angledy),minval(angledy)
!        call flush(6)
!      endif
!      write(300+iam,*)'angledx',tile,maxval(angledx),minval(angledx)
!      write(300+iam,*)'angledy',tile,maxval(angledy),minval(angledy)
!      !call flush(300+iam)
!      usina=sin(angledx*rad)
!      ucosa=cos(angledx*rad)
!      sinb=sin(angledy*rad)
!      cosb=cos(angledy*rad)
!      if(iam.eq.0)then
!        write(6,*)'sina',maxval(usina),minval(usina)
!        write(6,*)'cosa',maxval(ucosa),minval(ucosa)
!        write(6,*)'sinb',maxval(sinb),minval(sinb)
!        write(6,*)'cosb',maxval(cosb),minval(cosb)
!      endif
    end do 
!    write(0,*)'bottom raqmschem_backgd_read'
!    call flush(0)
    return
    end subroutine raqmschem_backgd_read
    subroutine raqmschem_backgd_write(rc)
    integer, optional, intent(out) :: rc

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile 
    type(chem_data_type),   pointer :: data => null()
    type(chem_config_type), pointer :: config => null()
    logical :: debug=.false.
    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    do de = 0, deCount-1
      call raqmschem_model_get(de=de, data=data, tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return


      call chem_io_write('srcco_totl.nc',srcco_totl(:,:,9), path=trim(config % emi_outname), de=de, rc=localrc)

      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      if(debug)then
      write(6,'("chem_backgd_write: PET:",i4," DE:",i2," tile=",i2," co - min/max = "2g16.6)') localpe, de, &
        tile, minval(srcco_totl), maxval(srcco_totl) 
      endif
      call chem_io_write('srcnind.nc', srcnind(:,:,9), path=trim(config % emi_outname), de=de, rc=localrc)

      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      if(debug)then
      write(6,'("chem_backgd_write: PET:",i4," DE:",i2," tile=",i2," nox - min/max = "2g16.6)') localpe, de, &
        tile, minval(srcnind), maxval(srcnind) 
      endif
#if 0
      if(allocated(data%griddx))then
        call chem_io_write('griddx.nc', data % griddx, path=trim(config % emi_outname), de=de, rc=localrc)

        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        write(6,'("chem_backgd_write: PET:",i4," DE:",i2," tile=",i2," griddx - min/max = "2g16.6)') localpe, de, &
          tile, minval(data % griddx), maxval(data % griddx) 
        call chem_io_write('griddy.nc', data % griddy, path=trim(config % emi_outname), de=de, rc=localrc)

        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        write(6,'("chem_backgd_write: PET:",i4," DE:",i2," tile=",i2," griddy - min/max = "2g16.6)') localpe, de, &
         tile, minval(data % griddy), maxval(data % griddy) 
       endif
#endif
     end do
     return
     end subroutine raqmschem_backgd_write
    subroutine raqmschem_chem_write(tr3d,data,statein,dims,itime,cdate,filename,rc)
    use raqmschem_species_mod
    use raqmschemcomm_mod, only : thgrd,tcmw,idbc1,idbc2,idoc1,idoc2,idso4,pgrd
    use raqmschemcomm_mod, only :tau6hr,jo1d_inst,jno_inst,lnox_save,no2ten,sourceno,colnox_save
    use raqmschemcomm_mod, only : bbco_d,emisco3d
    use raqmschem_pmgrid_mod,only : iam
    use raqmschem_const_mod, only : mw_so4_aer,avgro,mw_co,grvity
    use raqmschem_state_mod
    implicit none
    integer dims(3),i,j
    integer,optional :: itime
    character*10, optional, intent(in) :: cdate
    character*100 fileout
    character *(*), optional, intent(in) :: filename
    integer, optional, intent(out) :: rc
    type(chem_data_type) :: data
    
    real(CHEM_KIND_R8),dimension(:,:,:,:) :: tr3d
    real(CHEM_KIND_R4),dimension(dims(1),dims(2),dims(3)) :: traceout
    real(chem_kind_r4),dimension(dims(1),dims(2),dims(3)) :: dpm,dz
    real(chem_kind_r4),dimension(dims(1),dims(2)) :: sfcp,trace2dout,colno2,tau2d,colnoy,dqdtsum
    real(chem_kind_r4),dimension(dims(1),dims(2),dims(3)) :: ext_bcoc,ext_dust,ext_seasalt
    real(chem_kind_r4),dimension(dims(1),dims(2),dims(3)) :: ext_tot
    type(chem_state_type),  pointer :: stateIn, stateOut

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile ,m,k,kk,nl
    type(chem_config_type), pointer :: config => null()
    REAL,    PARAMETER :: airmw    = 28.97
    character *10 :: units
    real(chem_kind_r4) :: fac
    fac=avgro/airmw*10./grvity


    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
    if(present(filename))then
      fileout=trim(filename)
    else
      if(present(cdate))then
        fileout='tracer.'//cdate//'.nc'
      else
        fileout='tracer.nc'
      endif
    endif
!    write(6,*)'at ajl zzyyy itime',present(itime)
!    call flush(6)
    nl=dims(3)

    do de = 0, deCount-1
      call raqmschem_model_get(de=de,  tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      traceout=tr3d(:,:,:,1)
      sfcp(:,:)=statein%pr3d(:,:,1)*.01
      do k=1,dims(3)
        dpm(:,:,k)=(statein%pr3d(:,:,k)-statein%pr3d(:,:,k+1))*.01
        dz(:,:,k)=(statein%ph3d(:,:,k+1)-statein%ph3d(:,:,k))/9.80616
      end do
      colno2=0.0
      colnoy=0.0
      tau2d=0.0
      dqdtsum=0.0
      do k=1,dims(3)
            colno2(:,:)=colno2(:,:)+dpm(:,:,k)*tr3d(:,:,k,p_no2)
            colnoy(:,:)=colnoy(:,:)+dpm(:,:,k)*tr3d(:,:,k,p_noy)
            tau2d(:,:)=tau2d(:,:)+tau6hr(:,:,k)
            dqdtsum=dqdtsum+statein%dqdt(:,:,k)*dpm(:,:,k)
      end do
!      colno2=colno2*avgro/airmw*1.e-4/grvity
      colno2=colno2*avgro/airmw*10./grvity
      colnoy=colnoy*avgro/airmw*10./grvity
      if(present(itime))then
!        do k=1,63
!          write(6,*)'out q',k,maxval(traceout(:,:,k))
!        end do
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='q',units='kg/kg',rc=localrc)
        traceout=tr3d(:,:,:,3)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='o3mrphys',units='kg/kg',rc=localrc)
        call flipz(o3vmr_inst,traceout)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='o3vmr',units='ppv',rc=localrc)
!        traceout=data%ugrid
!        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
!        varname='ugrid',units='m/sec',rc=localrc)
!        traceout=data%vgrid
!        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
!        varname='vgrid',units='m/sec',rc=localrc)
        traceout=data%potvort
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='potvort',units=' ',rc=localrc)
        traceout=statein%vort
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='vort',units=' ',rc=localrc)
!        do k=1,dims(3)
!          traceout(:,:,k)=statein%vort(:,:,k)+data%fcor
!        end do
!        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
!        varname='absvort',units=' ',rc=localrc)
        traceout=data%absvort
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='absvort',units=' ',rc=localrc)
        traceout=pgrd
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='pdash',units=' ',rc=localrc)
        traceout=dpm
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='dpm',units='mb',rc=localrc)
        traceout=dz
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='dz',units='mb',rc=localrc)
        traceout=statein%prl3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='pdash',units='mb',rc=localrc)
        traceout=statein%tk3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='T',units='K',rc=localrc)
        traceout=statein%us3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='U',units='m/s',rc=localrc)
        traceout=statein%vs3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='V',units='m/s',rc=localrc)
        trace2dout=data%aod
        call chem_io_writenc(trim(fileout),trace2dout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='aod',units='1',rc=localrc)
!        write(6,*)'out sulf'
!        call flush(6)
        traceout=data%ext_3d(:,:,:,1)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='ext_sulf',units='1',rc=localrc)
!    real(chem_kind_r4),dimension(dims(1),dims(2),dims(3)) :: ext_bcoc,ext_dust,ext_seasalt
        ext_bcoc=0.0
        do m=2,5
          ext_bcoc=ext_bcoc+data%ext_3d(:,:,:,m)
        end do
        ext_dust=0.0
        ext_seasalt=0.0
        do m=6,10
          ext_dust=ext_dust+data%ext_3d(:,:,:,m)
        end do
        do m=11,14
          ext_seasalt=ext_seasalt+data%ext_3d(:,:,:,m)
        end do
        ext_tot=ext_bcoc+ext_dust+ext_seasalt+data%ext_3d(:,:,:,1)
!        write(6,*)'ext'
!        call flush(6)
        call chem_io_writenc(trim(fileout),ext_bcoc,path=trim(config%emi_outname),de=de,time=itime, &
        varname='ext_bcoc',units='1',rc=localrc)
        call chem_io_writenc(trim(fileout),ext_dust,path=trim(config%emi_outname),de=de,time=itime, &
        varname='ext_dust',units='1',rc=localrc)
        call chem_io_writenc(trim(fileout),ext_seasalt,path=trim(config%emi_outname),de=de,time=itime, &
        varname='ext_seas',units='1',rc=localrc)
        call chem_io_writenc(trim(fileout),ext_tot,path=trim(config%emi_outname),de=de,time=itime, &
        varname='ext_tot',units='1',rc=localrc)
!         write(6,*)'bottom ext'
!         call flush(6)
   
        traceout=statein%dqdt
!        write(6,*)'dqdt',maxval(traceout)
!        call flush(6)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='cvdqdt',units=' ',rc=localrc)
!        write(6,*)'shape dqdtsum',shape(dqdtsum)
!        call flush(6)
!        write(6,*)'shape traceout',shape(traceout),'dims3',dims(3)
!        call flush(6)
        call chem_io_writenc(trim(fileout),dqdtsum,path=trim(config%emi_outname),de=de,time=itime, &
        varname='dqdtsum',units=' ',rc=localrc)


      else
!        write(6,*)'output time=1 '
!        call flush(6)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='q',units='kg/kg',rc=localrc)
        traceout=tr3d(:,:,:,3)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='o3mrphys',units='kg/kg',rc=localrc)
        traceout=o3vmr_inst
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='o3vmr',units='ppv',rc=localrc)
        traceout=data%potvort
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='potvort',units=' ',rc=localrc)
        traceout=data%absvort
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='absvort',units=' ',rc=localrc)
        traceout=statein%prl3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='pdash',units=' ',rc=localrc)
        traceout=dpm
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='dpm',units='mb',rc=localrc)
        traceout=statein%prl3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='pdash',units='mb',rc=localrc)
        traceout=statein%tk3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='T',units='K',rc=localrc)
        traceout=statein%us3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='U',units='m/s',rc=localrc)
        traceout=statein%vs3d
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='V',units='m/s',rc=localrc)
      endif

!      write(6,*)'ninput',ninput,'fileout',trim(fileout)  
      do m=1,ninput
        units='ppv'
        traceout=tr3d(:,:,:,icheminputpt(m))
!       convert to raqms units
        if(cheminput(m)(1:2).eq.'bc'.or.cheminput(m)(1:3).eq.'oc1'.or. &
          cheminput(m)(1:3).eq.'oc2'.or.                               &
          cheminput(m)(1:3).eq.'dus'.or.cheminput(m)(1:3).eq.'sea'.or. &
!          cheminput(m)(1:3).eq.'so2'.or.cheminput(m)(1:4).eq.'sulf')then
          cheminput(m)(1:4).eq.'sulf')then
          traceout=traceout*1.e-9
          if(cheminput(m)(1:3).eq.'bc1')then
             traceout=traceout*airmw/tcmw(idbc1)
          elseif(cheminput(m)(1:3).eq.'bc2')then
             traceout=traceout*airmw/tcmw(idbc2)
          elseif(cheminput(m)(1:3).eq.'oc1')then
             traceout=traceout*airmw/tcmw(idoc1)
          elseif(cheminput(m)(1:3).eq.'oc2')then
             traceout=traceout*airmw/tcmw(idoc2)
          elseif(cheminput(m)(1:4).eq.'sulf')then
             traceout=traceout*airmw/mw_so4_aer
          else
            units='kg kg-1'
          endif
        endif
!        if(cheminput(m)(1:3).eq.'dms'.or.cheminput(m)(1:3).eq.'msa')then
!       they changed so2 to ppm
        if(cheminput(m)(1:3).eq.'dms'.or.cheminput(m)(1:3).eq.'msa'.or.cheminput(m)(1:3).eq.'so2')then
          traceout=traceout*1.e-6
        endif
!        !if(iam.eq.0.and.tile.eq.2)then
!          write(6,*)'m',m,'icheminputpt',cheminputlist(m),'cheminput',cheminput(m)
!          call flush(6)
!        endif
!        write(200+iam,*)'m',m,cheminput(m),units
!        call flush(200+iam)
        if(present(itime))then
          call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
          varname=cheminput(m),units=units,rc=localrc)
        else
          call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
          varname=cheminput(m),units=units,rc=localrc)
        endif
!        write(6,*)'varname',trim(cheminput(m)),'rc',localrc
!        call flush(6)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      end do
      o3dep_save=o3dep_save*86400.
      if(present(itime))then
        call chem_io_writenc(trim(fileout),sfcp,path=trim(config%emi_outname),de=de,time=itime, &
        varname='sfcp',units='mb',rc=localrc)
        call chem_io_writenc(trim(fileout),thgrd,path=trim(config%emi_outname),de=de,time=itime, &
        varname='theta',units='K',rc=localrc)
        call chem_io_writenc(trim(fileout),o3dep_save,path=trim(config%emi_outname),de=de,time=itime, &
        varname='o3dep',units='ppv day -1',rc=localrc)
        call chem_io_writenc(trim(fileout),zlwigrd,path=trim(config%emi_outname),de=de,time=itime, &
        varname='zlwigrd',units=' ',rc=localrc)
        trace2dout=statein%rc2d 
        call chem_io_writenc(trim(fileout),trace2dout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='rc2d',units=' ',rc=localrc)
        trace2dout=statein%rn2d-statein%rc2d
        call chem_io_writenc(trim(fileout),trace2dout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='rl2d',units=' ',rc=localrc)
      else
        call chem_io_writenc(trim(fileout),sfcp,path=trim(config%emi_outname),time=1,de=de, &
        varname='sfcp',units='mb',rc=localrc)
        call chem_io_writenc(trim(fileout),thgrd,path=trim(config%emi_outname),time=1,de=de, &
        varname='theta',units='K',rc=localrc)
        call chem_io_writenc(trim(fileout),o3dep_save,path=trim(config%emi_outname),time=1,de=de, &
        varname='o3dep',units='ppv day -1',rc=localrc)
        call chem_io_writenc(trim(fileout),zlwigrd,path=trim(config%emi_outname),time=1,de=de, &
        varname='zlwigrd',units=' ',rc=localrc)
      endif
      o3dep_save=0.0
      codep_save=codep_save*86400.
      if(present(itime))then
        call chem_io_writenc(trim(fileout),codep_save,path=trim(config%emi_outname),de=de,time=itime, &
        varname='codep',units='ppv day -1',rc=localrc)
        call chem_io_writenc(trim(fileout),colno2,path=trim(config%emi_outname),de=de,time=itime, &
        varname='colno2',units=' ',rc=localrc)
        call chem_io_writenc(trim(fileout),colnoy,path=trim(config%emi_outname),de=de,time=itime, &
        varname='colnoy',units=' ',rc=localrc)
        call chem_io_writenc(trim(fileout),tau2d,path=trim(config%emi_outname),de=de,time=itime, &
        varname='tau2d',units=' ',rc=localrc)
        call chem_io_writenc(trim(fileout),sourceno,path=trim(config%emi_outname),de=de,time=itime, &
        varname='srcno',units=' ',rc=localrc)
        colnox_save=colnox_save*fac
        call chem_io_writenc(trim(fileout),colnox_save,path=trim(config%emi_outname),de=de,time=itime, &
        varname='lnox2d',units=' ',rc=localrc)
        colnox_save=0.0
      else
        call chem_io_writenc(trim(fileout),codep_save,path=trim(config%emi_outname),time=1,de=de, &
        varname='codep',units='ppv day -1',rc=localrc)
      endif
      codep_save=0.0
      noydep_save=noydep_save*86400.
      if(present(itime))then
        call chem_io_writenc(trim(fileout),noydep_save,path=trim(config%emi_outname),de=de,time=itime, &
        varname='noydep',units='ppv day -1',rc=localrc)
      else
        call chem_io_writenc(trim(fileout),noydep_save,path=trim(config%emi_outname),time=1,de=de, &
        varname='noydep',units='ppv day -1',rc=localrc)
      endif
      noydep_save=0.0
      if(iam.eq.0)then
        write(6,*)'navg before save',navg
      endif 
      navg=0
      if(present(itime))then
!       note 1 is at top of these so must flip before outpout
!        call flipz(no2ten,traceout)
        call chem_io_writenc(trim(fileout),no2ten,path=trim(config%emi_outname),de=de,time=itime, &
        varname='no2ten',units=' ',rc=localrc)
        no2ten=0.0
        call flipz(lnox_save,traceout)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='lnox',units=' ',rc=localrc)
        lnox_save=0.0
        call flipz(jo1d_inst,traceout)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='jo1d',units=' ',rc=localrc)
        call flipz(jno_inst,traceout)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='jno',units=' ',rc=localrc)
!        call flipz(tau6hr,traceout)
        call chem_io_writenc(trim(fileout),tau6hr,path=trim(config%emi_outname),de=de,time=itime, &
        varname='cot6hr',units=' ',rc=localrc)
        tau6hr=0.0
        if(allocated(emisco3d))then
          call flipz(emisco3d,traceout)
        else
          traceout=0.0
          traceout(:,:,1)=bbco_d
        endif
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='emcofire',units=' ',rc=localrc)
      endif
      
    end do
!    write(200+iam,*)'bottom'
!    call flush(200+iam)
     
    return
    end subroutine raqmschem_chem_write
    subroutine raqmschem_chem_write_o3vmr(dims,itime,cdate,filename,rc)
    use raqmschem_species_mod
    use raqmschemcomm_mod, only : thgrd,o3vmr_inst
    use raqmschem_pmgrid_mod,only : iam
    implicit none
    integer dims(3)
    integer,optional :: itime
    character*10, optional, intent(in) :: cdate
    character*100 fileout
    character *(*), optional, intent(in) :: filename
    integer, optional, intent(out) :: rc
    
!    real(CHEM_KIND_R8),dimension(:,:,:,:) :: tr3d
    real(CHEM_KIND_R4),dimension(dims(1),dims(2),dims(3)) :: traceout

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile ,m,k
    type(chem_config_type), pointer :: config => null()

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
    if(present(filename))then
      fileout=trim(filename)
    else
      if(present(cdate))then
        fileout='o3vmr.'//cdate//'.nc'
      else
        fileout='o3vmr.nc'
      endif
    endif
!    write(6,*)'at ajl zzyyy itime',present(itime)
!    call flush(6)
!    write(200+iam,*)'o3vmr'
!    call flush(200+iam)

    do de = 0, deCount-1
      call raqmschem_model_get(de=de,  tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      if(present(itime))then
        call chem_io_writenc(trim(fileout),thgrd,path=trim(config%emi_outname),de=de,time=itime, &
        varname='theta',units='K',rc=localrc)
        call chem_io_writenc(trim(fileout),pgrd,path=trim(config%emi_outname),de=de,time=itime, &
        varname='press',units='pa',rc=localrc)
        call flipz(o3vmr_inst,traceout)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='o3vmr',units='ppv',rc=localrc)
        call chem_io_writenc(trim(fileout),o3mr,path=trim(config%emi_outname),de=de,time=itime, &
        varname='o3mr',units='kg kg-1',rc=localrc)
      else
        call chem_io_writenc(trim(fileout),thgrd,path=trim(config%emi_outname),time=1,de=de, &
        varname='theta',units='K',rc=localrc)
        call chem_io_writenc(trim(fileout),pgrd,path=trim(config%emi_outname),time=1,de=de, &
        varname='press',units='pa',rc=localrc)
        call flipz(o3vmr_inst,traceout)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),time=1,de=de, &
        varname='o3vmr',units='ppv',rc=localrc)
        call chem_io_writenc(trim(fileout),o3mr,path=trim(config%emi_outname),time=1,de=de, &
        varname='o3mr',units='kg kg-1',rc=localrc)
      endif
      
    end do
!    write(200+iam,*)'bottom chem_write_o3vmr'
!    call flush(200+iam)
     
    return
    end subroutine raqmschem_chem_write_o3vmr
    subroutine raqmschem_chem_write_var(outvar,dims,isave,name,cdate,rc)
    use raqmschem_species_mod
    implicit none
    character *(*)name
    integer dims(3),isave
    character*10, optional, intent(in) :: cdate
    integer, optional, intent(out) :: rc
    
    real(CHEM_KIND_R4),dimension(:,:,:) :: outvar
    real(CHEM_KIND_R4),dimension(dims(1),dims(2),dims(3)) :: traceout

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile ,m
    type(chem_config_type), pointer :: config => null()

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS
    write(6,*)'chem_write_var',trim(name)
    call flush(6)

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    do de = 0, deCount-1
      call raqmschem_model_get(de=de,  tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        traceout=outvar
        if(present(cdate))then
          call chem_io_writenc('tracer.'//cdate//'.nc',traceout,path=trim(config%emi_outname),de=de,time=isave, &
          varname=name,rc=localrc)
        else
          call chem_io_writenc('tracer.out.nc',traceout,path=trim(config%emi_outname),de=de,time=isave, &
          varname=name,rc=localrc)
        endif
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
     end do
     return
     end subroutine raqmschem_chem_write_var
    subroutine raqmschem_chem_write_var_2d(outvar,dims,isave,name,cdate,rc)
    use raqmschem_species_mod
    implicit none
    character *(*)name
    integer dims(2),isave
    character*10, optional, intent(in) :: cdate
    integer, optional, intent(out) :: rc
    
    real(CHEM_KIND_R4),dimension(:,:) :: outvar
    real(CHEM_KIND_R4),dimension(dims(1),dims(2)) :: traceout

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile ,m
    type(chem_config_type), pointer :: config => null()

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    do de = 0, deCount-1
      call raqmschem_model_get(de=de,  tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        traceout=outvar
        if(present(cdate))then
          write(6,*)'out 2d shape traceout',shape(traceout),'isave',isave,'cdate',cdate,'isave',isave
          call flush(6)
          call chem_io_writenc('tracer.'//cdate//'.nc',traceout,path=trim(config%emi_outname),de=de,time=isave, &
          varname=name,rc=localrc)
        else
          call chem_io_writenc('tracer.out.nc',traceout,path=trim(config%emi_outname),de=de,time=isave, &
          varname=name,rc=localrc)
        endif
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
     end do
     return
     end subroutine raqmschem_chem_write_var_2d

    subroutine raqmschem_chem_write_debug(tr3d,dims,filename,rc)
    use raqmschem_species_mod
    use raqmschemcomm_mod, only : thgrd
    implicit none
    integer dims(3)
    character*100 fileout
    character *(*), optional, intent(in) :: filename
    integer, optional, intent(out) :: rc
    
    real(CHEM_KIND_R8),dimension(:,:,:,:) :: tr3d
    real(CHEM_KIND_R4),dimension(dims(1),dims(2),dims(3)) :: traceout

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile ,m
    type(chem_config_type), pointer :: config => null()

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
    if(present(filename))then
      fileout=trim(filename)
    else
        fileout='tracer.nc'
    endif

    do de = 0, deCount-1
      call raqmschem_model_get(de=de,  tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      traceout=tr3d(:,:,:,1)
      write(6,*)'output time=1 q'
      call flush(6)
      call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname), &
      varname='q',time=1,de=de,rc=localrc)

!      write(6,*)'now tracers debug ',ninput',ninput,'fileout',trim(fileout)  
      do m=1,ninput
        traceout=tr3d(:,:,:,icheminputpt(m))
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname=cheminput(m),time=1,de=de,rc=localrc)
        write(6,*)'write_debug varname',trim(cheminput(m)),'rc',localrc
        call flush(6)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      end do
      
    end do
     
    return
    end subroutine raqmschem_chem_write_debug
    subroutine raqmschem_chem_writer4(tr3d,dims,itime,filename,rc)
    use raqmschem_species_mod
    use raqmschemcomm_mod, only : thgrd
    implicit none
    integer dims(3)
    integer,optional :: itime
!    character*10, optional, intent(in) :: cdate
    character*100 fileout
    character *(*), optional, intent(in) :: filename
    integer, optional, intent(out) :: rc
    
    real(CHEM_KIND_R4),dimension(:,:,:,:) :: tr3d
    real(CHEM_KIND_R4),dimension(dims(1),dims(2),dims(3)) :: traceout

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile ,m
    type(chem_config_type), pointer :: config => null()

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
    if(present(filename))then
      fileout=trim(filename)
    else
        fileout='tracer.nc'
    endif
!    write(6,*)'at ajl zzyyy itime',present(itime)
!    call flush(6)

    do de = 0, deCount-1
      call raqmschem_model_get(de=de,  tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      traceout=tr3d(:,:,:,1)
      if(present(itime))then
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='q',units='kg kg-1',rc=localrc)
        traceout=tr3d(:,:,:,3)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='o3mrphys',units='kg kg-1',rc=localrc)
        traceout=o3vmr_inst
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
        varname='o3vmr',units='ppv',rc=localrc)
      else
!        write(6,*)'output time=1 '
!        call flush(6)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='q',units='kg kg-1',rc=localrc)
        traceout=tr3d(:,:,:,3)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='o3mrphys',units='kg kg-1',rc=localrc)
        traceout=o3vmr_inst
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
        varname='o3vmr',rc=localrc)
      endif

!      write(6,*)'ninput',ninput,'fileout',trim(fileout)  
      do m=1,ninput
        if(icheminputpt(m)>0)then
        traceout=tr3d(:,:,:,icheminputpt(m))
        if(maxval(abs(traceout))>1.e-30)then
        write(6,*)'diag out write ',trim(fileout),maxval(traceout),minval(traceout),m,cheminput(m),icheminputpt(m)
        call flush(6)
        endif
        if(present(itime))then
          call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=itime, &
          varname=cheminput(m),rc=localrc)
        else
          call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),de=de,time=1, &
          varname=cheminput(m),rc=localrc)
        endif
!        write(6,*)'varname',trim(cheminput(m)),'rc',localrc
!        call flush(6)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        endif
      end do
!      o3dep_save=o3dep_save*86400.
      if(present(itime))then
        call chem_io_writenc(trim(fileout),thgrd,path=trim(config%emi_outname),de=de,time=itime, &
        varname='theta',rc=localrc)
!        call chem_io_writenc(trim(fileout),o3dep_save,path=trim(config%emi_outname),de=de,time=itime, &
!        varname='o3dep',rc=localrc)
!        call chem_io_writenc(trim(fileout),zlwigrd,path=trim(config%emi_outname),de=de,time=itime, &
!        varname='zlwigrd',rc=localrc)
      else
        call chem_io_writenc(trim(fileout),thgrd,path=trim(config%emi_outname),time=1,de=de, &
        varname='theta',rc=localrc)
!        call chem_io_writenc(trim(fileout),o3dep_save,path=trim(config%emi_outname),time=1,de=de, &
!        varname='o3dep',rc=localrc)
!        call chem_io_writenc(trim(fileout),zlwigrd,path=trim(config%emi_outname),time=1,de=de, &
!        varname='zlwigrd',rc=localrc)
      endif
!      o3dep_save=0.0
      
    end do
     
    return
    end subroutine raqmschem_chem_writer4
#ifdef WETDEPDIAG
    subroutine raqmschem_wetdepdiag_write(dims,filename,rc)
    use raqmschem_species_mod, only : familyname,soluablechemname,nsol
    use raqmschemcomm_mod, only : wetc,wetl,wetcf,wetlf,lnox_save,lpaveij,cpaveij,wetccol
    use raqmschemcomm_mod, only : o3ften_save,o3dten_save,ch4ften_save,ch4dten_save
    use raqmschemcomm_mod, only : n2often_save,n2odten_save,coften_save,codten_save
    use raqmschem_pmgrid_mod, only : iam,iamprn,iprnin,jprnin,kprnin,iprn,jprn
    implicit none
    integer dims(3)
    character*100 fileout
    character *(*), optional, intent(in) :: filename
    integer, optional, intent(out) :: rc
    
    real(CHEM_KIND_R4),dimension(dims(1),dims(2),dims(3)) :: traceout
    real(CHEM_KIND_R4),dimension(dims(1),dims(2)) :: traceout2d
    real(CHEM_KIND_R4),parameter :: secday=86400.
    real(CHEM_KIND_R4),parameter :: one=1.

    ! -- local variables
    integer :: localrc
    integer :: de, deCount, localpe, tile ,m
    type(chem_config_type), pointer :: config => null()
!    write(300+iam,*)'top wetdepdiag'
!    call flush(300+iam)

    ! -- begin
    if (present(rc)) rc = CHEM_RC_SUCCESS

    call raqmschem_model_get(deCount=deCount, config=config, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return

    call chem_comm_get(localpe=localpe, rc=localrc)
    if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
    if(present(filename))then
      fileout=trim(filename)
    else
        fileout='wetdepdiag.nc'
    endif
    cpaveij=cpaveij/float(nwetdepdiag)*86400.
    lpaveij=lpaveij/float(nwetdepdiag)*86400.
#ifdef DIAGWETDEP
    write(6,*)'cpave',maxval(cpaveij),'nwetdepdiag',nwetdepdiag,'nsol',nsol
    call flush(6)
#endif
   

    do de = 0, deCount-1
      call raqmschem_model_get(de=de,  tile=tile, rc=localrc)
      if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        call chem_io_writenc(trim(fileout),cpaveij,path=trim(config%emi_outname),time=1,de=de,&
        varname='cp',rc=localrc)
        call chem_io_writenc(trim(fileout),lpaveij,path=trim(config%emi_outname),time=1,de=de,&
        varname='lp',rc=localrc)

!      write(6,*)'now tracers debug ',ninput',ninput,'fileout',trim(fileout)  
      do m=1,nsol
        traceout=wetc(:,:,:,m)/float(nwetdepdiag)*86400.
        traceout2d=wetccol(:,:,m)/float(nwetdepdiag)*86400.
        if(iam.eq.iamprn)then
          write(300+iam,*)'tile ',tile,'iprn',iprn,jprn,'iprnin',iprnin,jprnin
          write(300+iam,*)'nwetdepdiagout ',nwetdepdiag,' wetccol ', &
          wetccol(iprn,jprnin,m),' traceout2d ',traceout2d(iprn,jprn)
          write(300+iam,*)m,'col'//soluablechemname(m)
        endif
#ifdef DIAGWETDEP
        if(iam.eq.iamprn)then
        write(6,*)'write_wetdepdiag varname',m,'c'//trim(soluablechemname(m)),'rc',localrc
        call flush(6)
        endif
#endif
        call chem_io_writenc(trim(fileout),traceout2d,path=trim(config%emi_outname),&
        varname='col'//soluablechemname(m),time=1,de=de,rc=localrc)
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='c'//soluablechemname(m),time=1,de=de,rc=localrc)
!        call flush(6)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
#ifdef DIAGWETDEP
        if(iam.eq.iamprn)then
           write(6,*)m,'wetl out ',iprn,iprnin,wetl(iprn,jprnin,kprnin,m)
           call flush(6)
        endif
#endif
        traceout=wetl(:,:,:,m)/float(nwetdepdiag)*86400.
#ifdef DIAGWETDEP
        if(iam.eq.0)then
        write(6,*)'write_wetdepdiag varname','l'//trim(soluablechemname(m)),'rc',localrc
        call flush(6)
        endif
        if(iam.eq.iamprn)then
          write(6,*)'out ls ',m,trim(soluablechemname(m)),maxval(traceout),minval(traceout)
          call flush(6)
        endif
#endif
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='l'//trim(soluablechemname(m)),time=1,de=de,rc=localrc)
!        call flush(6)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      end do
      do m=1,4
        traceout=wetcf(:,:,:,m)/float(nwetdepdiag)*86400.
#ifdef DIAGWETDEP
        if(iam.eq.iamprn)then
        write(6,*)'familyname ',familyname(m)
        endif
#endif
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='c'//familyname(m),time=1,de=de,rc=localrc)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
        traceout=wetlf(:,:,:,m)/float(nwetdepdiag)*86400.
#ifdef DIAGWETDEP
        if(iam.eq.iamprn)then
        write(6,*)'write_wetdepdiag varname',m,'l'//trim(soluablechemname(m)),maxval(traceout),minval(traceout)
        call flush(6)
        endif
#endif
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='l'//trim(familyname(m)),time=1,de=de,rc=localrc)
!        call flush(6)
        if (chem_rc_check(localrc, file=__FILE__, line=__LINE__, rc=rc)) return
      end do
!      write(6,*)'shape lnox_save',shape(lnox_save),'traceout',shape(traceout)
!      do m=1,63
!        write(6,*)'k',m,'lnox_save',maxval(lnox_save(:,:,m))
!        call flush(6)
!      end do
      call flipz(lnox_save,traceout,factor=secday)
!        traceout=lnox_save*secday
      call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='lnox',time=1,de=de,rc=localrc)
!        traceout=o3ften_save*secday
      call flipz(o3ften_save,traceout,factor=secday)
      call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='o3ften',time=1,de=de,rc=localrc)
      call flipz(o3dten_save,traceout,factor=secday)
!        traceout=o3dten_save*secday
      call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='o3dten',time=1,de=de,rc=localrc)
      call flipz(ch4ften_save,traceout,factor=secday)
!        traceout=ch4ften_save*secday
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='ch4ften',time=1,de=de,rc=localrc)
      call flipz(ch4dten_save,traceout,factor=secday)
!        traceout=ch4dten_save*secday
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='ch4dten',time=1,de=de,rc=localrc)
!      write(6,*)'flipz n2often',maxval(n2often_save),minval(n2often_save)
!      call flush(6)
      call flipz(n2often_save,traceout,factor=secday)
!        traceout=n2often_save*secday
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='n2often',time=1,de=de,rc=localrc)
!      write(6,*)'flipz n2odten',maxval(n2odten_save),minval(n2odten_save)
!      call flush(6)
      call flipz(n2odten_save,traceout,factor=secday)
!        !traceout=n2odten_save*secday
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='n2odten',time=1,de=de,rc=localrc)
      call flipz(coften_save,traceout,factor=secday)
!        traceout=coften_save*secday
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='coften',time=1,de=de,rc=localrc)
      call flipz(codten_save,traceout,factor=secday)
!        traceout=codten_save*secday
        call chem_io_writenc(trim(fileout),traceout,path=trim(config%emi_outname),&
        varname='codten',time=1,de=de,rc=localrc)
      call chem_io_writenc(trim(fileout),zlwigrd,path=trim(config%emi_outname),time=1,de=de, &
        varname='zlwi',rc=localrc)
    end do
    nwetdepdiag=0
    cpaveij=0.0
    lpaveij=0.0
    wetc=0.0
    wetccol=0.0
    wetcf=0.0
    wetl=0.0
    wetlf=0.0
    return
    end subroutine raqmschem_wetdepdiag_write
#endif
    subroutine flipz(datai,datao,factor)
    use chem_types_mod
    implicit none
    real(CHEM_KIND_R4), dimension(:,:,:),intent(in) :: datai
    real(CHEM_KIND_R4), dimension(:,:,:),intent(out) :: datao
    real(CHEM_KIND_R4), optional, intent(in) :: factor
    integer dim(3),dimo(3),k
    dim=shape(datai)
    dimo=shape(datao)
    if(dim(1).ne.dimo(1).or.dim(2).ne.dimo(2).or.dim(3).ne.dimo(3))then
      write(6,*)'diffs wrong'
      call flush(6)
      stop
    endif
    if(present(factor))then
      do k=1,dim(3)
        datao(:,:,dim(3)-k+1)=datai(:,:,k)*factor
      end do
    else
      do k=1,dim(3)
        datao(:,:,dim(3)-k+1)=datai(:,:,k)
      end do
    endif
    return
    end subroutine flipz


end module raqmschem_iodata_mod
