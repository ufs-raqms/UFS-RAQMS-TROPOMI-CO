#include <choosevan.h>
#include <choosechem.h>
#include <options.h>
module raqmschem_cedsair_mod
  use chem_types_mod, only : chem_kind_r4,chem_kind_r8
!  use raqmschemcomm_mod, only : pgrd,tgrd,qgrd,zeupgrd,zsurf,numcedsair,ccedsair
  use raqmschemcomm_mod, only : pgrd,tgrd,qgrd,zeupgrd,zsurf,nlnair,tcmw,airmw
!  use raqmschemcomm_mod, only : ktopcedsair,kbotcedsair,intaltair,intcedsair
!  use raqmschemcomm_mod, only : srcso2cedsair,srcn2ocedsair
  character*10  cedsair(8),ccedsair(8)
  data cedsair/'CO','NOx','SO2','BC','OC','N2O','NH3','CH4'/
  integer :: p_ceds_co,p_ceds_NOx,p_ceds_so2,p_ceds_bc,p_ceds_oc
  integer :: p_ceds_n2o,numcedsair
  integer*4,allocatable  :: ktopcedsair(:,:,:),kbotcedsair(:,:,:)
  real*4, allocatable :: intaltair(:)
  real*4, allocatable :: intcedsair(:,:,:,:)
  real(chem_kind_r4),allocatable,dimension(:,:,:,:) :: cedsairemis
!  real*4,allocatable :: srccocedsair(:,:,:),srcso2cedsair(:,:,:)
!  real*4,allocatable :: srcn2ocedsair(:,:,:),ration2oceds(:,:,:)
  logical :: lcedsair=.false.
  logical :: cedsairstep=.false.
contains
  subroutine cedsair_init_data2(m,ids,ide,jds,jde,tile,pathin,cmonth)
  use raqmschem_pmgrid_mod, only : iam
  implicit none 
  character *256 file,ctile*1
  character (*) pathin,cmonth
  integer m,nlevin,k,i,j,ids,ide,jds,jde,tile,n,ii
  real*4,allocatable,dimension(:,:,:) :: air3d
  real*4 :: altair(nlnair)
!  if(lcedsair)then
    allocate (intaltair(0:nlnair))
    write(ctile,'(i1.1)')tile
!          srcin, path=trim(pathin)//trim(cmonth), de=de, &
        file='tile'//ctile//'/emi_CO-AIR_molpercm2persec.dat'
        open(10,file=trim(pathin)//trim(cmonth)//'/'//trim(file), &
        convert='big_endian',form='unformatted')
        read(10)nlevin
!        if(iam==0.and.tile==1)then
!        write(6,*)'nlevin',nlevin
!        call flush(6)
!        endif
        read(10)altair
!        if(iam==0.and.tile==1)then
!        write(6,*)'altair',altair
!        call flush(6)
!        endif
        intaltair(0)=0
        intaltair(1)=2.*altair(1)
        do k=2,nlnair
          intaltair(k)=altair(k)+(altair(k)-intaltair(k-1))
        end do
!        if(iam==0)then
!          do k=1,nlnair
            !write(6,*)k,altair(k),intaltair(k)
!          end do
!        endif
        allocate(air3d(192,192,nlnair))
        read(10)air3d
!        do j=jds,jde
!          do i=ids,ide
!            srccoair(i-ids+1,j,:)=air3d(i,j,:)
!          end do
!        end do
!        if(iam==0.and.tile==1)then
!        write(6,*)'srccoair',maxval(srccoair),minval(srccoair)
!        call flush(6)
!        endif
        close(10)
        file='tile'//ctile//'/emi_NOx-AIR_molpercm2persec.dat'
        open(10,file=trim(pathin)//trim(cmonth)//'/'//trim(file), &
        convert='big_endian',form='unformatted')
        read(10)nlevin
        read(10)altair
!        allocate(air3d(192,192,nlnair))
        read(10)air3d
!        do j=jds,jde
!          do i=ids,ide
!            srcnair(i-ids+1,j,:)=air3d(i,j,:)
!          end do
!        end do
!        if(iam==0)then
!        write(6,*)'srccoair',maxval(srcnair),minval(srcnair)
!        call flush(6)
        !endif

        close(10)
        if(.not.allocated(intcedsair).and.numcedsair/=0)then
!          if(tile==1.and.ids<=190.and.190<=ide)then
!            write(6,*)'ids',ids,ide,'jds',jds,jde
!          endif
          allocate(intcedsair(ide-ids+1,jds:jde,0:nlnair,numcedsair))
          intcedsair=0.0
          allocate(ktopcedsair(ide-ids+1,jds:jde,numcedsair))
          allocate(kbotcedsair(ide-ids+1,jds:jde,numcedsair))
          ktopcedsair=0
          kbotcedsair=0
          do n=1,numcedsair
            file='tile'//ctile//'/emi_'//trim(ccedsair(n))//'-AIR_molpercm2persec.dat'
            open(10,file=trim(pathin)//trim(cmonth)//'/'//trim(file), &
            convert='big_endian',form='unformatted')
            read(10)nlevin
            if(iam==75.and.n==1)then
              write(6,*)'nlevin',nlevin
              call flush(6)
            endif
            read(10)altair
            if(iam==75.and.n==1)then
              write(6,*)'altair',altair
              call flush(6)
            endif
            if(n==1)then
              intaltair(0)=0
              intaltair(1)=2.*altair(1)
              do k=2,nlnair
                intaltair(k)=altair(k)+(altair(k)-intaltair(k-1))
              end do
              if(iam==75)then
                do k=1,nlnair
                  write(6,*)k,altair(k),intaltair(k)
                end do
              endif
              if(.not.allocated(air3d))then
              allocate(air3d(192,192,nlnair))
              endif
            endif
            read(10)air3d
!           need to handle fact that bc and oc are ug/kg not ppv
!           mult molec * mwbc/airmw
!           fix 18:23 8/12/2023
            if(ccedsair(n)=='BC')then
              air3d=air3d*tcmw(1)/airmw
            elseif(ccedsair(n)=='OC')then
              air3d=air3d*tcmw(2)/airmw
            endif
            do j=jds,jde
             do i=ids,ide
               ii=i-ids+1
               do k=1,nlnair
                 intcedsair(i-ids+1,j,k,n)=intcedsair(i-ids+1,j,k-1,n)+air3d(i,j,k)
                 if(kbotcedsair(ii,j,n)==0.and.air3d(i,j,k)/=0.)then
                   kbotcedsair(ii,j,n)=k
                 endif
!                 if(i==190.and.j==47.and.n==3.and.tile==1)then
!                   write(6,*)'kbotcedsair',ii,'kbot',kbotcedsair(ii,j,n),'air3d',air3d(i,j,k)
                 !endif
                 if(air3d(i,j,k)/=0.0)then
                   ktopcedsair(ii,j,n)=k
                 endif
!                 if(i==141.and.j==192.and.tile==1.and.ccedsair(n)=='SO2')then
!                   write(6,*)'so2air3d',k,air3d(i,j,k),'intcedsair',intcedsair(i-ids+1,j,k,n)
!                   write(6,*)'kbot',kbotcedsair(ii,j,n),'ktop',ktopcedsair(ii,j,n)
!                 endif
#ifdef DIAGCEDSAIR
!              if(iam==75.and.n==1.and.i==1.and.j==25)then
              if(tile==5)then
                if(air3d(i,j,k)/=0.0)then
                   write(6,*)trim(ccedsair(n)),i,j,'k',k,'intcedsair','iloc',i-ids+1,intcedsair(i-ids+1,j,k,n),'air3d',air3d(i,j,k)
                   flush(6)
                endif
              endif
#endif
               end do
             end do
            end do
#ifdef DIAGCEDSAIR
!            if(iam==75.or.iam==11)then
             if(tile==5)then
               write(6,*)'srccedsair',n,trim(ccedsair(n)),maxval(intcedsair(:,:,:,n))
               call flush(6)
            endif
#endif
            close(10)
          end do ! n
!          if(tile==1.and.ids<=190.and.190<=ide.and.jds<=47.and.47<=jde)then
!             write(6,*)'kbotcedsair',kbotcedsair(190-ids+1,47,:)
!          endif
#ifdef DIAGCEDSAIR
          if(iam==75.and.jds<=25.and.jde>=25)then
!          if(tile==5)then
            do k=1,maxval(ktopcedsair(:,:,1))
              write(6,*)'75 intcedsair',k,maxval(intcedsair(:,:,k,1)),minval(intcedsair(:,:,k,1))
            end do
            write(6,*)'751,24 kbot',kbotcedsair(1,25,1),ktopcedsair(1,25,1)
            do k=kbotcedsair(1,25,1),ktopcedsair(1,25,1)
              write(6,*)'75 intcedsair',k,intcedsair(1,25,k,1)
            end do
            
          endif
#endif
 
        endif
!        if(.not.allocated(intcoair))then
!          allocate(intcoair(ide-ids+1,jds:jde,0:nlnair))
!          allocate(intnoxair(ide-ids+1,jds:jde,0:nlnair))
!          intcoair(:,:,0)=0.0
          !intnoxair(:,:,0)=0.0
!          do k=1,nlnair
            !intcoair(:,:,k)=intcoair(:,:,k-1)+srccoair(:,:,k)
!            intnoxair(:,:,k)=intnoxair(:,:,k-1)+srcnair(:,:,k)
!          end do
!        endif
  end subroutine cedsair_init_data2
  subroutine docedsairm(j,dt)
  use raqmschem_pmgrid_mod,only : iam,masterproc,nlev,nc,begj,endj,tile,ibeg,iend
  use chem_raqms_mod, only : cedsairinc
  implicit none
  integer i,j,k,m,kbot,ktop,klo,kup,kk,kkb,ii,lbsrc(3),ubsrc(3)
  real(chem_kind_r4) :: zgeoh(nlev),zztop,zzbot,zup,zlo,dens,dt
  real(chem_kind_r8) :: aflo,afup,intvallo(numcedsair),intvalup,sac
  logical zloset,zupset
!  write(6,*)'j',j,'dt',dt,'top docedsairm','begj',begj,endj
!  flush(6)
  if(.not.allocated(cedsairemis))then
     allocate (cedsairemis(nc,nlev,begj:endj,numcedsair))
  endif
  cedsairemis(:,:,j,:)=0.0
!  if(j==145.or.begj+j+1==145.and.tile==5)then
!    write(6,*)'at cc j',j,'begj',begj,endj,'ibeg',ibeg,iend
!    flush(6)
!  endif
  !write(6,*)'srcso2cedsair allocated',allocated(srcso2cedsair)
  !flush(6)
  !lbsrc=lbound(srcso2cedsair)
  !ubsrc=ubound(srcso2cedsair)
  !write(6,*)'nc',nc,begj,'lb',lbsrc,'ub',ubsrc
  !flush(6)
  do i=1,nc
    ii=ibeg+i-1
    ktop=maxval(ktopcedsair(i,j,:))
!    if(ii==141.and.j==192.and.tile==1)then
!      write(6,*)ii,j,'ktop',ktop
!    endif
    if(ktop<1)cycle
    kbot=max(minval(kbotcedsair(i,j,:))-1,0)
!    if(ii==141.and.j==192.and.tile==1)then
!      write(6,*)ii,j,'kbot',kbot
!    endif
    zztop=intaltair(ktop)
    zzbot=intaltair(kbot)
    zgeoh(1)=zsurf(i,j)*.001
!    write(6,*)'zgeoh1',zgeoh(1)
    do k=2,nlev
      zgeoh(k)=zeupgrd(i,j,k-1)*.001 ! make km
!      write(6,*)'zgeoh',k,zgeoh(k)
    end do
!    write(6,*)i,j,'kbot',kbot,ktop,'zztop',zztop,zzbot
!    flush(6)
    zloset=.false.
    klo=-1
    aflo=0.0
    zlo=0.0
!    if((i==1.or.ii==97).and.j==145.and.tile==5)then
!       write(6,*)'i',i,'ii',ii,'j',j,'at bb zlo',zlo,'zztop',zztop,zzbot
!       flush(6)
!    endif
    if(zlo>=zztop)cycle ! skip this i,j no emissions
    if(kbot==0)then
      intvallo=0.0
      kkb=1
      zloset=.true.
      aflo=0.0
    else
      do k=1,nlev
        zup=zgeoh(k+1)-zgeoh(1)
        if(zup<=zzbot)cycle
        zlo=zgeoh(k)-zgeoh(1)
!        if((i==7.or.ii==7).and.j==97.and.tile==3)then
!    if((i==1.or.ii==97).and.j==145.and.tile==5)then
!          write(6,*)k,'zxlo',zlo,'intaltair',intaltair(kbot:kbot+1)
        !endif
        if(zup>=zzbot.or.(zlo<intaltair(kbot+1).and.zlo>=intaltair(kbot)))then
          klo=kbot
          
          aflo=0.0
!    if((i==1.or.ii==97).and.j==145.and.tile==5)then
!          if((i==7.or.ii==7).and.j==97.and.tile==3)then
!            write(6,*)'set klo',klo,'k',k
          !endif
          intvallo=0.0
!          aflo=(zlo-intaltair(kbot))/(intaltair(kbot+1)-intaltair(kbot))
          zloset=.true.
          kkb=k
!          do m=1,numcedsair
!            intvallo(m)=intcedsair(i,j,klo+1,m)*aflo+intcedsair(i,j,klo,m)*(1.-aflo)
          !end do
          exit
        endif
      end do
    endif
!    if((ii==7.or.ii==7).and.j==97.and.tile==3)then
!    if((i==1.or.ii==97).and.j==145.and.tile==5)then
!      write(6,*)'at aa intvallo',intvallo(1),'klo',klo,'kkb',kkb,'i',i,'ii',ii
!      flush(6)
    !endif
!    if(ii==141.and.j==192.and.tile==1)then
      !write(6,*)ii,j,'kkb',kkb
    !endif
      
DOK:  do k=kkb,nlev
      dens=7.2431122e+18*pgrd(i,j,k)/(tgrd(i,j,k)*(1.+.608*qgrd(i,j,k)))
      zupset=.false.
      kup=-1
      afup=0.0
      zlo=zgeoh(k)-zgeoh(1)
!      write(6,*)i,j,'zlo',zlo
!      flush(6)
      if(zlo>=zztop)exit DOK
      zup=zgeoh(k+1)-zgeoh(1)
!      write(6,*)i,j,'zup',zup
!      flush(6)
      if(zup<=zzbot)cycle
!        if(i==1.and.j==97.and.tile==3)then
!          write(6,*)'zup',zup,'zlo',zlo,'zzbot',zzbot,'kbot',kbot,'ktop',ktop
!        endif
!      if(zlo<=zzbot)then
!        zloset=.true.
!        aflo=0.0
        !klo=kbot
!      endif
      if(zup>=zztop-.000001)then
        zupset=.true.
        afup=1.
        kup=ktop
      endif
      if(.not.zloset.or..not.zupset)then
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!        write(6,*)'k',k,'kbot',kbot,'ktop',ktop,'zupset',zupset
      !endif
      do kk=kbot,ktop
        if(.not.zupset)then
!          if(zup<intaltair(kk).and.zup>=intaltair(kk-1))then
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
         !write(6,*)'zup',zup,'intaltair',kk,intaltair(kk:kk+1)
!        endif
          if(zup<intaltair(kk+1).and.zup>=intaltair(kk))then
!            kup=kk-1
            kup=kk
!            afup=(zup-intaltair(kk-1))/(intaltair(kk)-intaltair(kk-1))
            afup=(zup-intaltair(kk))/(intaltair(kk+1)-intaltair(kk))
            zupset=.true.
            if(kk==ktop)then
                write(6,*)'hit ktop zupset',ktop,'i',i,j,k
            endif
          endif
        endif
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!          write(6,*)k,'zupset',zupset,zloset,'kup',kup,'afup',afup
       !endif
        if(zupset)then
           exit
         endif
      end do ! kk
      endif
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!        write(6,*)'k',k,'zupset2',zupset,zloset
!      endif
      if(.not.zupset.or.kup<0)then
         write(6,*)'error ',i,j,k,'tile',tile
         write(6,*)'klo',klo,kup,zupset,zloset
         write(6,*)'zlo',zlo,'zup',zup
         flush(6)
         write(6,*)'kbot',kbot,ktop
         write(6,*)'zztop',zztop,zzbot
         flush(6)
!         do kk=kbot-1,ktop
         do kk=kbot,ktop
           write(6,*)i,j,k,'intaltair',kk,intaltair(kk)
           flush(6)
         end do
         call killit('aa error')
      endif
      do m=1,numcedsair
        intvalup=intcedsair(i,j,kup+1,m)*afup+intcedsair(i,j,kup,m)*(1.-afup)
!       here zup, zlo are in meters
        sac=(intvalup-intvallo(m))/(zup-zlo)*1.e-5 ! km to cm
          if(sac<-1.e-9)then
             write(6,*)i,j,k,m,'tile',tile
             write(6,*)'sacneg',sac,'intvallo',intvallo(m),intvalup,'klo',klo,kup,'aflo',aflo,afup
             write(6,*)'zztop',zztop,zzbot
             write(6,*)'klo',klo,kup,'zupset',zupset,zupset,zloset
             write(6,*)'intaltairklo',klo,intaltair(klo:klo+1)
             write(6,*)'intaltairkup',kup,intaltair(kup:kup+1)
             write(6,*)m,'intcedsairklo',klo,intcedsair(i,j,klo:klo+1,m)
             write(6,*)m,'intcedsairkup',kup,intcedsair(i,j,kup:kup+1,m)
             write(6,*)m,'zup',zup,'zlo',zlo
             write(6,*)'slope',(intvalup-intvallo(m))/(zup-zlo)
             flush(6)
         call killit('bb error')
        endif
        sac=max(0.0,sac)
        cedsairemis(i,k,j,m)=sac ! ajl
        intvallo(m)=intvalup
      end do ! m
      aflo=afup
      klo=kup
      kbot=kup
      if(kup<0)then
         write(6,*)'kup error ',kup,i,j,k
         call killit('kup')
      endif
    end do DOK ! k
  end do !i
  return
  end subroutine docedsairm
  subroutine addcedsairemis(i,j,k,sacco,sacnox,sacn2o)
  use raqmschemlocaltype_mod
  use raqmschem_pmgrid_mod, only : tile
  implicit none
!  type(chemlocaltype),target :: chemlocal
  real sacco,sacnox,sacn2o
  integer i,j,k,m
!#include <chemlocaldefinepointer.h>
! #include <chemlocaldefinepointer2.h>
!#include <chemlocalsetpointer.h>
! #include <chemlocalsetpointer2.h>
  do m=1,numcedsair
    select case (ccedsair(m))
    case ('CO')
      sacco=cedsairemis(i,k,j,m)
!      cogrd(i,k)=cogrd(i,k)+cedsairemis(i,k,j,m)
    case ('NOx')
!      xno2grd(i,k)=xno2grd(i,k)+cedsairemis(i,k,j,m)
      sacnox=cedsairemis(i,k,j,m)
    case ('N2O')
!      xn2ogrd(i,k)=xn2ogrd(i,k)+cedsairemis(i,k,j,m)
       sacn2o=cedsairemis(i,k,j,m)
    end select
  end do
  return
  end subroutine addcedsairemis
  subroutine docedsairmold(j,dt)
  use raqmschem_pmgrid_mod,only : iam,masterproc,nlev,nc,begj,endj,tile
  implicit none
  integer i,j,k,m,kbot,ktop,klo,kup,kk,kkb
  real(chem_kind_r4) :: zgeoh(nlev),zztop,zzbot,zup,zlo,dens,dt
  real(chem_kind_r8) :: aflo,afup,intvallo,intvalup,sac
  logical zloset,zupset
!  write(6,*)'j',j,'dt',dt,'top docedsairm','begj',begj,endj
!  flush(6)
  if(.not.allocated(cedsairemis))then
     allocate (cedsairemis(nc,nlev,begj:endj,numcedsair))
  endif
  cedsairemis(:,:,j,:)=0.0
  do i=1,nc
    ktop=maxval(ktopcedsair(i,j,:))
    if(ktop<1)cycle
    kbot=max(minval(kbotcedsair(i,j,:))-1,0)
    zztop=intaltair(ktop)
    zzbot=intaltair(kbot)
    zgeoh(1)=zsurf(i,j)*.001
!    write(6,*)'zgeoh1',zgeoh(1)
    do k=2,nlev
      zgeoh(k)=zeupgrd(i,j,k-1)*.001 ! make km
!      write(6,*)'zgeoh',k,zgeoh(k)
    end do
!    write(6,*)i,j,'kbot',kbot,ktop,'zztop',zztop,zzbot
!    flush(6)
    zloset=.false.
    klo=-1
    aflo=0.0
    zlo=zgeoh(k)-zgeoh(1)
    if(zlo>=zztop)cycle ! skip this i,j no emissions
    if(kbot==0)then
      intvallo=0.0
      kkb=1
      zloset=.true.
    else
      do k=1,nlev
        zlo=zgeoh(k)-zgeoh(1)
      end do
    endif
      
DOK:  do k=1,nlev
      dens=7.2431122e+18*pgrd(i,j,k)/(tgrd(i,j,k)*(1.+.608*qgrd(i,j,k)))
      zupset=.false.
      kup=-1
      afup=0.0
      zlo=zgeoh(k)-zgeoh(1)
!      write(6,*)i,j,'zlo',zlo
!      flush(6)
      if(zlo>=zztop)exit DOK
      zup=zgeoh(k+1)-zgeoh(1)
!      write(6,*)i,j,'zup',zup
!      flush(6)
      if(zup<=zzbot)cycle
!        if(i==1.and.j==97.and.tile==3)then
!          write(6,*)'zup',zup,'zlo',zlo,'zzbot',zzbot,'kbot',kbot,'ktop',ktop
!        endif
      if(zlo<=zzbot)then
        zloset=.true.
        aflo=0.0
        klo=kbot
      endif
      if(zup>=zztop-.000001)then
        zupset=.true.
        afup=1.
        kup=ktop
      endif
      if(.not.zloset.or..not.zupset)then
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!        write(6,*)'k',k,'kbot',kbot,'ktop',ktop,'zupset',zupset
      !endif
      do kk=kbot,ktop
        if(.not.zloset)then
!          if(zlo<intaltair(kk).and.zlo>=intaltair(kk-1))then
          if(zlo<intaltair(kk+1).and.zlo>=intaltair(kk))then
!            klo=kk-1
            klo=kk
!            aflo=(zlo-intaltair(kk-1))/(intaltair(kk)-intaltair(kk-1))
            aflo=(zlo-intaltair(kk))/(intaltair(kk+1)-intaltair(kk))
            zloset=.true.
            kbot=kk
            if(kk==ktop)then
                write(6,*)'hit ktop',ktop,'i',i,j,k
            endif
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!           write(6,*)'new kbot',k,'kbot',kbot
!       endif
          endif
        endif
        if(.not.zupset)then
!          if(zup<intaltair(kk).and.zup>=intaltair(kk-1))then
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
         !write(6,*)'zup',zup,'intaltair',kk,intaltair(kk:kk+1)
!        endif
          if(zup<intaltair(kk+1).and.zup>=intaltair(kk))then
!            kup=kk-1
            kup=kk
!            afup=(zup-intaltair(kk-1))/(intaltair(kk)-intaltair(kk-1))
            afup=(zup-intaltair(kk))/(intaltair(kk+1)-intaltair(kk))
            zupset=.true.
            if(kk==ktop)then
                write(6,*)'hit ktop zupset',ktop,'i',i,j,k
            endif
          endif
        endif
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!          write(6,*)k,'zupset',zupset,zloset,'kup',kup,'afup',afup
       !endif
        if(zupset.and.zloset)then
           exit
         endif
      end do ! kk
      endif
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!        write(6,*)'k',k,'zupset2',zupset,zloset
!      endif
      if(.not.zupset.and.zloset)then
        kup=klo+1
        zupset=.true.
        afup=0.0
!      if(i==3.and.j==86.and.tile==1)then
!        if(i==1.and.j==97.and.tile==3)then
!          write(6,*)'up not set',k
      !endif
      endif
      if(.not.zupset.or..not.zloset.or.klo<0.or.kup<0)then
         write(6,*)'error ',i,j,k,'tile',tile
         write(6,*)'klo',klo,kup,zupset,zloset
         write(6,*)'zlo',zlo,'zup',zup
         flush(6)
         write(6,*)'kbot',kbot,ktop
         write(6,*)'zztop',zztop,zzbot
         flush(6)
!         do kk=kbot-1,ktop
         do kk=kbot,ktop
           write(6,*)i,j,k,'intaltair',kk,intaltair(kk)
           flush(6)
         end do
         call killit('cc error')
      endif
      do m=1,numcedsair
!        intvallo=intcedsair(i,j,klo+1,m)*aflo+intcedsair(i,j,klo,m)*(1.-aflo)
        intvalup=intcedsair(i,j,kup+1,m)*afup+intcedsair(i,j,kup,m)*(1.-afup)
!       here zup, zlo are in meters
        sac=(intvalup-intvallo)/(zup-zlo)*1.e-5 ! km to cm
          if(sac<-1.e-9)then
             write(6,*)i,j,k,m,'sacneg',sac,'intvallo',intvallo,intvalup,'klo',klo,kup,'aflo',aflo,afup
             write(6,*)'zztop',zztop,zzbot
             write(6,*)'klo',klo,kup,'zupset',zupset,zupset,zloset
             write(6,*)'intaltairklo',klo,intaltair(klo:klo+1)
             write(6,*)'intaltairkup',kup,intaltair(kup:kup+1)
             write(6,*)m,'intcedsairklo',klo,intcedsair(i,j,klo:klo+1,m)
             write(6,*)m,'intcedsairkup',kup,intcedsair(i,j,kup:kup+1,m)
             write(6,*)m,'zup',zup,zlo
             write(6,*)'slope',(intvalup-intvallo)/(zup-zlo)
             flush(6)
         call killit('dd error')
        endif
        sac=max(0.0,sac)
        cedsairemis(i,k,j,m)=sac ! ajl
      end do ! m
      aflo=afup
      klo=kup
      if(kup<0)then
         write(6,*)'kup error ',kup,i,j,k
         call killit('kup')
      endif
    end do DOK ! k
  end do !i
  return
  end subroutine docedsairmold
end module raqmschem_cedsair_mod
