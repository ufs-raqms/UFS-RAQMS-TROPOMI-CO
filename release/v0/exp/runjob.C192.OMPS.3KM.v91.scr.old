#!/bin/bash -x
#SBATCH --job-name=JOBNAME
##SBATCH --time=4:30:00
#SBATCH --time=RTIME
##SBATCH --time=0:08:00
#SBATCH --exclusive
##SBATCH --cpus-per-task=1
##SBATCH --partition=raqms
##SBATCH --partition=all
#####SBATCH --overcommit
#SBATCH --partition=S4PART
##SBATCH --priority=20
##SBATCH --partition=ivy
#####SBATCH --qos=debug
##SBATCH --constraint=haswell
##SBATCH --mem-per-cpu=2000
#SBATCH --ntasks=JTASKS
#SBATCH --output=/ships19/aqda/lenzen/fv3/myjob.C192.JTASKS.9.1.OMPS.DTSEC.CDATEIN
#export NTASKS=$SLURM_NTASKS
#export CDATEENDRUN=2019081412
export CDATEENDRUN=2019100112
export NTASKS=RTASKS
export NTASKS_EXE=RTASKS
 echo NTASKS $NTASKS $SLURM_NTASKS
export CASE=C192                 #resolution, C96, C384 or C768
export print_freq=0
export INTGNEW=YES
export RAQMSO3MR=NO
export CDATE=CDATEIN
echo CDATE $CDATE
echo CDATE $CDATE >& $HOME/outcdate.$CDATE
export CDATE0=$CDATE
export CDATEEND=CDATEENDIN
export WETDEPLSWRF=YES
export WRFCHEMALPHA=YES
export SASTRACERPOS=YES
export SASSHALTRACERPOS=YES
export GSIVAR="o3vmr"
export GSIPROC=$NGSIPROC
echo SLURM_JOB_NODELIST $SLURM_JOB_NODELIST

#export DIAGCO=YES

set -x
#export CDATEBEG=2019070112
export CDATEBEG=2019071512
#export CDATEBEG=2019123112
#export CDATEBEG=2020010112
#export CDATEBEG=2019080112

#env >& $HOME/outenv.fv3
#env >& /home/lenzen/outenv.fv32
ulimit -s unlimited
#echo LOGNAME $LOGNAME
export PTYPE=intel
##export TWOLAYER_EMISSIONS=YES
export MODE=64bit           			       # dycore precision:   32bit, 64bit
export HRSAVE=6
#export HRSAVE=1
export DHRGSI=3
#export HRSAVE=1
#export NHTUW=12
#export NHTUW=48
#export NHTUW=36
#export NHTUW=3
#export HRSAVE=3
#export NHTUW=6
#export HRSAVE=1
#export NHTUW=1
#export HRSAVE=1
#export HRSAVE=3
#export NHTUW=4
#export NHTUW=12
export localhost=s4
echo $HOSTNAME
export FHMAX=6                                       #maximum forecast hours

#------------------------------------------------------------------
#------------------------------------------------------------------
# Running NEMS FV3GFS on Theia
#------------------------------------------------------------------
#notes:
# this job card is for C96 case. If you are running
# C384 or C768 cases, please make the following change:
#
#   for C384, change line 8 and line 33 to:
#      #PBS -l nodes=96:ppn=12      
#      export CASE=C384            
#
#   for C768, change line 8 and line 33 to:
#      #PBS -l nodes=192:ppn=12
#      export CASE=C768            
#
#------------------------------------------------------------------

export machine=s4-cardinal              #WCOSS_C, theia, etc
#export PSLOT=fv3gfs.$PTYPE.$MODE.$NTASKS.onelayer.nth1.$CASE.088.raqmso3vmr.$FHMAX               #user-defined experiment name.
export PSLOT=RAQMSO3VMR-PHYSICS
export FV3GFSVER=FV3GFS.9.1.2019
#export FV3GFSVER=FV3GFS.8.9.EXP.S4.PROD.DTSEC
export EXPNAME=O3.GSI.OMPS.LP.KTROP.P3KM.V91
export FULLLAYEFF=YES
#export CDATE=2019083112           #initial condition dates  2016092900 2016011812 2016081200               

export BASE_DATA=/ships19/aqda/lenzen/FV3GFS_V1_RELEASE ;# data directory
#export base_data_disk=/ships19/aqda/lenzen/FV3GFSO3VMR_MLSOMI/OBS/
export base_data_disk=/ships19/aqda/lenzen/OMPS-NPP/2019/limb/
export GSIDATAPATH=$base_data_disk
export GSINAME=omps.CDATE.nc
export FIX_FV3=$BASE_DATA/fix/fix_fv3                 #model fixed fields
export IC_DIRB=$BASE_DATA/ICs.TRACERS.p10                        #forecast initial conditions 
#export IC_DIRB=$BASE_DATA/ICs.TRACERS.p10.new                        #forecast initial conditions 
export LEVS=65

export nth_f=1                                         # number of threads 
# temporary running directory
export BASE_OUT=/ships19/models2/$LOGNAME/$FV3GFSVER/$EXPNAME/$CASE/
export SCRATCH_OUT=/scratch/users/$LOGNAME/$FV3GFSVER/$EXPNAME/$CASE/
export GSI_DIR=/home/lenzen/GSI/GSI.PRODGSI.16b.VIIRS.NO2/sorc/gsi.fd/
mkdir -p $SCRATCH_OUT
mkdir -p $BASE_OUT
#export PATHSCRATCH=$BASE_OUT/GSISCRATCH/
export PATHSCRATCH=$SCRATCH_OUT/GSISCRATCH/
/bin/rm -f $PATHSCRATCH/input* cdate.inc*
export BASE_PATH=$BASE_OUT
export IC_DIR=$BASE_PATH/IC_DIR/                        #forecast initial conditions 
mkdir -p $IC_DIR
echo CDATE $CDATE CDATEBEG $CDATEBEG
if (( CDATE == CDATEBEG )) 
  then
  mkdir -p $IC_DIR/${CASE}_${CDATEBEG}
  rsync -ltvD $IC_DIRB/${CASE}_${CDATEBEG}/* $IC_DIR/${CASE}_${CDATEBEG}/
fi
#export BASE_OUT=/scratch/users/$LOGNAME/$FV3GFSVER/$EXPNAME/$CASE/
export AODLUT=/home/lenzen/Projects/INTEX/AOD_lut/

#if [ -d $DATA ]; then rm -rf $DATA ; fi

# directory to save output
#export ROTDIR=$BASE_OUT/GFS_DIR/
export ROTDIR=$SCRATCH_OUT/GFS_DIR/
mkdir -p $ROTDIR
mkdir -p $BASE_OUT/OUTDIR $BASE_OUT/RUNDIR $BASE_OUT/TRACER 
#mkdir -p $BASE_OUT/REGRID.0.5/$CDATE/ $BASE_OUT/OUTREGRID/$CDATE/
#export BASE_OUT=$BASE_OUT/OUTDIR/
#mkdir -p $BASE_OUT
#lfs setstripe --stripe-count 4 $emi_outname
export nstf_name="2,0,1,0,5"

# NEMS FV3GFS forecast executable directory
FV3DIR=${1:-`pwd`/../../..}
export FV3DIR_RELEASE=${1:-`pwd`/..}
export GSIDRIVE=$FV3DIR_RELEASE/ush/runremapgsi.C192.OMPS.sh
echo GSIDRIVE $GSIDRIVE >& $HOME/outGSIDRIVE.$CDATE
export gsi_path=$BASE_OUT/GSIDIR/$CDATE/
#export gsi_scratch=$BASE_OUT/GSISCRATCH/$CDATE/
export gsi_scratch=$SCRATCH_OUT/GSISCRATCH/$CDATE/
mkdir -p $gsi_scratch
mkdir -p $gsi_path
echo $GSIDRIVE >& $gsi_scratch/outrunremap >& $HOME/outstartgsidrive.$CDATE
echo CDATEIN >& $HOME/out.cdatein
echo CDATE $CDATE >& $HOME/outcdate.gsidrive.$CDATE
export FCSTEXECDIR=$FV3DIR/NEMS/exe
#export FCSTEXECDIR=/home/lenzen/FV3GFS-GSDCHEM.0.8.9.diag/EMC_FV3GFS-GSDCHEM/NEMS/exe
echo FCSTEXECDIR $FCSTEXECDIR
echo  FV3DIR $FV3DIR

export FHOUT=6                                        #forecast output frequency in hours
export NFHMAX_HF=24
#export atm_coupling_interval_sec=1800
#---------------------------------------------------------
#---------------------------------------------------------
#  C96)  export DELTIM=1800; export layout_x=6; export layout_y=8;  export NODES=12; 
case $CASE in
  C96)  export DELTIM=DTSECX; export layout_x=$JXX; export layout_y=$JYY;  export NODES=$SLURM_JOB_NODES; 
        export master_grid=1deg;   export REMAP_TASKS=20 ;;
  C192) export DELTIM=DTSECX ; export layout_x=$JXX; export layout_y=$JYY;  export NODES=$SLURM_JOB_NODES;
        export master_grid=0p5deg; export REMAP_TASKS=96 ;;
  C384) export DELTIM=450 ; export layout_x=12; export layout_y=16;  export NODES=96;
        export master_grid=0p5deg; export REMAP_TASKS=96 ;;
  C768) export DELTIM=225 ; export layout_x=16; export layout_y=24; export NODES=192;
        export master_grid=0p25deg; export REMAP_TASKS=384 ;;
  *)    echo "grid $CASE not supported, exit"
        exit ;;
esac
export domains_stack_size=40000000
#export domains_stack_size=80000000
export quilting=.true.
#export lgocart=.false.
export PARM_FV3DIAG=$FV3DIR_RELEASE/parm/parm_fv3diag
#export DIAG_TABLE=$FV3DIR_RELEASE/parm/chm_diag_table
export DIAG_TALBE=
#export FORECASTSH=$FV3DIR_RELEASE/scripts/exglobal_fcst_nemsfv3gfs.GSI.O3VMR.$CASE.DTSECX.gen.sh         
export FORECASTSH=$FV3DIR_RELEASE/scripts/exglobal_fcst_nemsfv3gfs.current.ceds.sh
export GSIREMAPSH=$FV3DIR_RELEASE/exp/runremapgsi.C192.O3VMR.sh
#/home/lenzen/testmpi/run.testmpi.gsi >&/home/lenzen/testmpi/runsep
#exit 0

#---determine task configuration
#export npe_node_f=32                                   # number of pes per node 
#export task_per_node=$((npe_node_f/nth_f))
#export tasks=$((NODES*task_per_node))                  # number of tasks 
export tasks=$NTASKS
export NTHREADS_REMAP=$nth_f


export TYPE=nh         				       # hydrostatic option: nh, hydro
export HYPT=off           			       # hyperthreading:     on, off  
export COMP="prod"        			       # compiling mode:     debug, repro, prod
if [ ${HYPT} = on ]; then
   export hyperthread=".true."
   export j_opt="-j 2"
else
   export hyperthread=".false."
   export j_opt="-j 1"
fi
#export FCSTEXEC=fv3_gfs_${TYPE}.${COMP}.${MODE}.x
export FCSTEXEC=NEMS.x

cp $FV3DIR/NEMS/src/conf/module-setup.sh.inc module-setup.sh
cp $FV3DIR/NEMS/src/conf/modules.nems modules.fv3
source ./module-setup.sh >/dev/null 2>&1
module use $( pwd -P )
module load modules.fv3
# ajl put in short cut for now will fix later
module purge >/dev/null 2>&1
#source $FV3DIR/NEMS/src/conf/source.modules.nems >/dev/null 2>&1
source $FV3DIR/NEMS/src/conf/source.modules.nems >$HOME/out.source.module 2>&1
module list >& $HOME/out.module.list

export mpiexec=`which mpirun`
export mpiexec=`which srun`
export APRUN_FV3="timeout 120m $mpiexec -s -l -n $NTASKS_EXE"
#export FCST_LAUNCHER="$mpiexec -prepend-rank -np $PBS_NP"
export FCST_LAUNCHER="$mpiexec -O -l --mem=50G -n $NTASKS_EXE"

echo "Model started:  " `date`
ulimit -a
export MPI_TYPE_DEPTH=20
export OMP_STACKSIZE=912M
export OMP_NUM_THREADS=$nth_f
export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4
#export FIELD_TABLE=$FV3DIR/parm/chm_field_table
#export FIELD_TABLE=$FV3DIR/parm/chm_field_table.tracers.full.V1.cod25
export FIELD_TABLE=$FV3DIR/parm/chm_field_table.tracers.full.gfdl
cat $FIELD_TABLE
#--------------------------------------------------------------------------
# start of while loop with restart every 6 hours
export CDATEBEG=$CDATE
export new_date=/home/lenzen/UTILS/da_advance_time.exe
CDATENEW=$($new_date $CDATE 6h)
echo CDATENEW $CDATENEW
#mkdir -p $BASE_OUT
export BASE_PATH=$BASE_OUT
export INIT_PATH=$BASE_OUT/INIT_DIR
mkdir -p $INIT_PATH
$GSIDRIVE >& $gsi_scratch/outrunremap &
while (( CDATE < CDATEEND ))
  do
  export INIT_DIR=$INIT_PATH/$CDATE/
  export DATATRACE=$BASE_OUT/TRACER/$CDATE/
 export BASE_OUTPUT=/ships19/aqda/
#  export DATA=${BASE_OUT}/RUNDIR/${CDATE}     
  export DATA=${SCRATCH_OUT}/RUNDIR/${CDATE}     
  export YYYYMMDD=`echo $CDATE | cut -c1-8`
  export HH=`echo $CDATE | cut -c9-10`
  if (( YYYYMMDD <= 20190729 || YYYYMMDD >= 20190805 ))
    then
      export GBBEPxDIR=/ships19/aqda/lenzen/GBBEPx.in.FV3C384Grid/${YYYYMMDD}/
    else
      export GBBEPxDIR=/ships19/aqda/lenzen/GBBEPx.in.FV3C384Grid/Reprocessed/${YYYYMMDD}/
  fi
  echo GBBEPxDIR $GBBEPxDIR
  echo CASE $CASE
  if [[ "$CASE" = "C96" ]]; then
    mkdir -p $BASE_OUT/REGRID.1.0/$CDATE/ 
    export DATAREGRID=$BASE_OUT/REGRID.1.0/$CDATE/
  else
    mkdir -p $BASE_OUT/REGRID.0.5/$CDATE/ 
    export DATAREGRID=$BASE_OUT/REGRID.0.5/$CDATE/
  fi
  echo DATAREGRID $DATAREGRID
  mkdir -p $BASE_OUT/OUTREGRID/$CDATE/
  export DATAOUTREGRID=$BASE_OUT/OUTREGRID/$CDATE/
  export emi_outname=$BASE_OUT/TRACER/$CDATE/
  export gsi_path=$BASE_OUT/GSIDIR/$CDATE/
  export gsi_scratch=$BASE_OUT/GSISCRATCH/$CDATE/
  mkdir -p $gsi_scratch
  mkdir -p $gsi_path
  /bin/rm -rf $emi_outname
  mkdir -p $emi_outname

# --execute the forecast
  $FORECASTSH >& $BASE_OUT/outfv3run.$CDATE
  if [ $? != 0 ]; then echo "forecast failed, exit"; exit; fi

  echo "fcst job is done"

#-------------------------------------------------------------------------
#--convert 6-tile output to global arrary in netCDF format
ymd=`echo $CDATE |cut -c 1-8`
cyc=`echo $CDATE |cut -c 9-10`
export DATA=$ROTDIR/gfs.$ymd/$cyc
export IPD4=YES
export REMAPSH=$FV3DIR_RELEASE/ush/fv3gfs_remap.sh            #remap 6-tile output to global array in netcdf
export REMAPEXE=$FV3DIR_RELEASE/exec/fregrid_parallel
export FIXDYNEXE=$FV3DIR_RELEASE/exec/fixdyn
#export REMAP_LAUNCHER="mpirun -prepend-rank -np $REMAP_TASKS"
export REMAP_LAUNCHER="srun -prepend-rank -n $REMAP_TASKS"

cp $FV3DIR_RELEASE/modulefiles/fv3gfs/fre-nctools.${machine} module.fre-nctools
module load module.fre-nctools
module list

$REMAPSH
export REMAP05=$FV3DIR_RELEASE/ush/fv3gfs_remap.tracer.dynam.o3vmr.sh
$REMAP05
# increment CDATE 6 hrs
CDATENEW=$($new_date $CDATE 6h)
echo new CDATENEW $CDATENEW
mkdir -p $IC_DIR/${CASE}_${CDATENEW}
# need to read fv3_trace for GFS_DIR for current date
# need to get met data for CDATENEW and combine
# need to store new data set in INIT_DATA directory and copy first time period into there
#export INIT_DATA=$IC_DIR/${CDATE}_${CDATENEW}/
export INIT_DATA=$IC_DIR/${CASE}_${CDATENEW}/
export DATATRACE=$BASE_OUT/TRACER/$CDATE/
export RESPATH=$ROTDIR/gfs.${YYYYMMDD}/${HH}/RESTART/
#mkdir -p /ships19/aqda/lenzen/OUTREMAP
#echo CDATE $CDATE CDATE0 $CDATE0 CDATENEW $CDATENEW
#/home/lenzen/UTILS/addchemtomet.C192.x $CDATENEW $CDATE0 >& /ships19/aqda/lenzen/OUTREMAP/outaddchem.o3vmr.$CDATE
mkdir -p $BASE_OUT/OUTREMAP
echo CDATE $CDATE CDATE0 $CDATE0 CDATENEW $CDATENEW
export INC=1
export CMAX=6
export rc= 
for (( i=1 ; i <= $CMAX ; i += $INC)); do
 export CTILE=$i
 echo $CTILE addchemtomet.$CASE.x &
/home/lenzen/UTILS/addchemtomet.$CASE.x $CDATENEW $CDATE0 >& $BASE_OUT/OUTREMAP/outaddchem.$CDATE.$CTILE &
export rc=`echo $rc $!` 
done
echo done with addchemtomet $rc 
wait $rc 
# try
export CDATE0=$CDATE
export CDATE=$CDATENEW

done
if (( CDATE >= CDATEENDRUN ))  
then
 exit 1
fi
#export NEXTDAYRUN=$FV3DIR_RELEASE/exp/rundate.reloop.C192.2019.GSI.OMPS.scr
##mkdir -p /ships19/aqda/lenzen/GSISCRATCH
#$NEXTDAYRUN >& /ships19/aqda/lenzen/GSISCRATCH/outrundaynext.OMPS.KTROP.C192.GSI

exit 0
export REMAPSHTR=$FV3DIR_RELEASE/ush/fv3gfs_tracer.sh    
export REMAPSHDYN=$FV3DIR_RELEASE/ush/fv3gfs_dynam.sh    
#export CDATEF=2019072118
#echo FHMAx $FHMAX
export INC=6
for (( i=0 ; i <= $FHMAX ; i += $INC)); do
  export CDATEF=$($new_date $CDATE ${i}h)
#  echo $i $CDATEF
  $REMAPSHTR >& $DATAOUTREGRID/outregrid.tracer.DIAG.$CDATEF
  export HHH=`printf "%03d " "$i"`
#export REMAP_LAUNCHER="srun -prepend-rank -n 1"
#  echo $i $HHH
#  $REMAPSHDYN >& /ships19/aqda/lenzen/OUTREMAP/outdyn.DIAG.$HHH
#  $REMAPSHDYN >& /ships19/aqdalenzen/OUTREMAP/outdyn.DIAG.$HHH
done

echo "Remap job is done!"

exit

