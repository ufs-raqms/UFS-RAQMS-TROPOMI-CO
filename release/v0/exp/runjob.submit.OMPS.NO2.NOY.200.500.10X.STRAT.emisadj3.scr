#!/bin/bash -x
#SBATCH --job-name=a3ny831
##SBATCH --time=4:30:00
#SBATCH --time=02:50:00
##SBATCH --time=0:08:00
#SBATCH --exclusive
##SBATCH --cpus-per-task=1
##SBATCH --partition=raqms
#SBATCH --partition=s4
##SBATCH --priority=20
##SBATCH --partition=ivy
#####SBATCH --qos=debug
####SBATCH --constraint=haswell
##SBATCH --mem-per-cpu=2000
#SBATCH --ntasks=390
#SBATCH --output=/ships19/aqda/lenzen/fv3/myjob.9.1.C192.390.OMPS.NO2.NOY.200.500.10X.STRAT.emissadj3.2023083112
#export NTASKS=$SLURM_NTASKS
export WRITE_GROUP_GFS=1
export WRTTASK_PER_GROUP_GFS=6
export WRTTASK_PER_GROUP=6
source /home/lenzen/EMC_FV3/v91/EMC_FV3GFS-GSDCHEM/setup18.0.4.esmf.8.0.0.bs47
source /home/lenzen/EMC_FV3/v91/EMC_FV3GFS-GSDCHEM/release/v0/scripts/config.base.emc.dyn.fv3.esrl
source /home/lenzen/EMC_FV3/v91/EMC_FV3GFS-GSDCHEM/release/v0/scripts/config.fcst.fv3.esrl
export cdmbgwd="0.2,2.5"
export nstf_name="2,0,0,0,0"
# AJL set last day to run for this experiment
export CDATEENDRUN=2023090112
#export CDATEENDRUN=2023070812
export NTASKS=390
export NTASKS_EXE=390
# ajl new one need
export NTASKS_FV3=$NTASKS
export restart_interval=0
export CDUMP=gfs
export WRITE_GROUP_GFS=1
export WRTTASK_PER_GROUP_GFS=6
export WRTTASK_PER_GROUP=6
export DOINCREMENTNOY=YES


# ajl end new
 echo NTASKS $NTASKS $SLURM_NTASKS
export CASE=C192                 #resolution, C96, C384 or C768
export print_freq=0
export INTGNEW=YES
export RAQMSO3MR=NO
export CDATE=2023083112
export CDATE0=$CDATE
export CDATEEND=2023090112
export WETDEPLSWRF=YES
export WRFCHEMALPHA=YES
#export SASTRACERPOS=YES
#export SASSHALTRACERPOS=YES
export SAMFCHEM=YES
#export GSIVAR="co no2"
#export GSIVAR="o3vmr co AOD"
export GSIVAR="no2"

export GSIPROC=384
export GSIPROCNO2=$GSIPROC
echo SLURM_JOB_NODELIST $SLURM_JOB_NODELIST
export AODLUT=/home/lenzen/Projects/INTEX/AOD_lut/
echo at one $CDATE

#export DIAGCO=YES

set -x
#export CDATEBEG=2019071512
export CDATEBEG=2023053012

#env >& $HOME/outenv.fv3
#env >& /home/lenzen/outenv.fv32
ulimit -s unlimited
#echo LOGNAME $LOGNAME
export PTYPE=intel
##export TWOLAYER_EMISSIONS=YES
export MODE=64bit           			       # dycore precision:   32bit, 64bit
export HRSAVE=6
export DHRGSI=3
export WINDOW_MAX=1.5
export GSI_DIR=/home/lenzen/GSI/GSI.PRODGSI.16b.CO.GEOAOD.NO2MPI/
export GSI_DIRB=/data/users/lenzen/global-workflow_v16b/sorc/gsi.fd/fix/Big_Endian
#export BERRROR_EXP=$GSI_DIR/sorc/gsi.fd/fix/Big_Endiian/gsi.trace.r4.FIREX-AQ.o3.no2.co.ch2o.ch4.bothpos.berror_stats.4xtime.o3phys.91day.361.fv3gfs
#export BERROR_EXP=$GSI_DIRB/gsi.trace.r4.2023.92day.85percent.no2.4xtime.berror_stats.fv3gfs
export BERROR_EXP=$GSI_DIRB/gsi.trace.CEDS2019.o3vmr.ox.no2.co.ch2o.berror_stats.1xtime.o3phys.fv3gfs.5DEGLL.6-8.2020

#export BERROR_EXP_AOD=$GSI_DIRB/gsi.trace.CEDS.seas5.aerosols.berror_stats.1xtime.o3phys.6-8.2020.fv3gfs
ls -l $BERROR_EXP
#ls -l $BERROR_EXP_AOD
#export NHTUW=12
#export NHTUW=48
#export NHTUW=36
#export NHTUW=3
#export HRSAVE=3
#export NHTUW=6
#export HRSAVE=1
#export NHTUW=1
#export HRSAVE=1
#export HRSAVE=3
#export NHTUW=4
#export NHTUW=12
export localhost=s4
echo $HOSTNAME
#export FHMAX=480                                       #maximum forecast hours
#export FHMAX=240                                       #maximum forecast hours
#export FHMAX=120                                       #maximum forecast hours
export FHMAX=72                                       #maximum forecast hours
#export FHMAX=12                                       #maximum forecast hours
export FHMAX=24                                       #maximum forecast hours
export FHMAX=12                                       #maximum forecast hours
export FHMAX=6                                       #maximum forecast hours

#------------------------------------------------------------------
#------------------------------------------------------------------
# Running NEMS FV3GFS on Theia
#------------------------------------------------------------------
#notes:
# this job card is for C96 case. If you are running
# C384 or C768 cases, please make the following change:
#
#   for C384, change line 8 and line 33 to:
#      #PBS -l nodes=96:ppn=12      
#      export CASE=C384            
#
#   for C768, change line 8 and line 33 to:
#      #PBS -l nodes=192:ppn=12
#      export CASE=C768            
#
#------------------------------------------------------------------

export machine=s4-submit              #WCOSS_C, theia, etc
#export PSLOT=fv3gfs.$PTYPE.$MODE.$NTASKS.onelayer.nth1.$CASE.088.raqmso3vmr.$FHMAX               #user-defined experiment name.
export PSLOT=RAQMSO3VMR-PHYSICS
export FV3GFSVER=FV3GFS.9.1.2019/
#export FV3GFSVER=FV3GFS.8.9.EXP.S4.PROD.450
export EXPNAME=O3.adj.iter4.CEDS.OMPS.NO2.NOY.200.500.10X.STRAT.KERNEL.NO2MPI
export NOX_EMISS_PATH=/ships19/aqda/lenzen/ADJNOX2023/ITER3/
#export no2gross=200
#export NOX_SCALE_FACTOR_PATH=/ships19/aqda/lenzen/RAQMSEMIS/C192/NOx_emission_scale_factor_FIREX-AQ/
# this does nothing unles NOX_SCALE_FACTOR_FILE is also set to something
echo at two $CDATE

export BASE_DATA=/ships19/aqda/lenzen/FV3GFS_V1_RELEASE ;# data directory
#export base_data_disk=/ships19/models2/lenzen/NUCAPS.CO/
export base_data_disk=/ships19/aqda/lenzen/OMPSNO2NC/
#export base_data_disk_tropomico=/ships19/aqda/lenzen/FV3GFSCO_TROPOMI/OBS/
#export base_data_disk_tropomico=/ships19/aqda/lenzen/OMPSNO2NC/
export GSIDATAPATH=$base_data_disk
mkdir -p $GSIDATAPATH
#export GSINAME=nucaps.co.CDATE.list
# ajl need to add fix_dir


export FIX_DIR=$BASE_DATA/fix
#export FIX_FV3=$BASE_DATA/fix/fix_fv3                 #model fixed fields
export IC_DIRB=$BASE_DATA/ICs.TRACERS.p10                        #forecast initial conditions 
export LEVS=65

export nth_f=1                                         # number of threads 
# temporary running directory
export BASE_OUT=/ships22/raqms/$LOGNAME/$FV3GFSVER/$EXPNAME/$CASE/
export SCRATCH_OUT=/scratch/users/$LOGNAME/$FV3GFSVER/$EXPNAME/$CASE/
#export BASE_OUT=/ships19/aqda/$LOGNAME/$FV3GFSVER/$EXPNAME/$CASE/
mkdir -p $BASE_OUT
export GSI_SCRATCH=$SCRATCH_OUT/GSISCRATCH/
mkdir -p $GSI_SCRATCH
export PATHSCRATCH=$SCRATCH_OUT/GSISCRATCH/
/bin/rm -f $PATHSCRATCH/input* cdate.inc*
export BASE_PATH=$BASE_OUT
export IC_DIR=$BASE_PATH/IC_DIR/                        #forecast initial conditions 
mkdir -p $IC_DIR
echo CDATE $CDATE CDATEBEG $CDATEBEG
if (( CDATE == CDATEBEG )) 
  then
  mkdir -p $IC_DIR/${CASE}_${CDATEBEG}
  rsync -ltvD $IC_DIRB/${CASE}_${CDATEBEG}/* $IC_DIR/${CASE}_${CDATEBEG}/
fi
echo at three $CDATE

#if [ -d $DATA ]; then rm -rf $DATA ; fi

# directory to save output
export ROTDIR=$SCRATCH_OUT/GFS_DIR/
mkdir -p $ROTDIR
mkdir -p $BASE_OUT/OUTDIR $SCRATCH_OUT/RUNDIR $BASE_OUT/TRACER 
#lfs setstripe --stripe-count 4 $emi_outname

# NEMS FV3GFS forecast executable directory
FV3DIR=${1:-`pwd`/../../..}
export FV3DIR_RELEASE=${1:-`pwd`/..}
export GSIDRIVE=$FV3DIR_RELEASE/ush/runremapgsi.C192.OMPS.NO2.sh
echo CDATG=$CDATE
export gsi_path=$BASE_OUT/GSIDIR/$CDATE/
export OMPSNO2TROP=YES
export OMPSNO2STRAT=NO
echo gsi_path $gsi_path
echo gsi_path $gsi_path >/scratch/users/lenzen/outgsi_path.$CDATE

export gsi_scratch=$SCRATCH_OUT/GSISCRATCH/$CDATE/
mkdir -p $gsi_scratch
mkdir -p $gsi_path
echo GSIPROCBEFORE $GSIPROC
env >/scratch/users/lenzen/out.env.before.gsi
$GSIDRIVE >& $gsi_scratch/outrunremap.OMPS.NO2 &
export FCSTEXECDIR=$FV3DIR/NEMS/exe
echo FCSTEXECDIR $FCSTEXECDIR
echo  FV3DIR $FV3DIR

export FHOUT=6                                        #forecast output frequency in hours
export NFHMAX_HF=24
#export atm_coupling_interval_sec=1800
#---------------------------------------------------------
#---------------------------------------------------------
#  C96)  export DELTIM=1800; export layout_x=6; export layout_y=8;  export NODES=12; 
case $CASE in
  C96)  export DELTIM=900; export layout_x=4; export layout_y=4;  export NODES=$SLURM_JOB_NODES; 
        export master_grid=1deg;   export REMAP_TASKS=20 ;;
  C192) export DELTIM=450 ; export layout_x=$JXX; export layout_y=$JYY;  export NODES=$SLURM_JOB_NODES;
        export master_grid=0p5deg; export REMAP_TASKS=96 ;;
  C384) export DELTIM=450 ; export layout_x=12; export layout_y=16;  export NODES=96;
        export master_grid=0p5deg; export REMAP_TASKS=96 ;;
  C768) export DELTIM=225 ; export layout_x=16; export layout_y=24; export NODES=192;
        export master_grid=0p25deg; export REMAP_TASKS=384 ;;
  *)    echo "grid $CASE not supported, exit"
        exit ;;
esac
export domains_stack_size=40000000
export quilting=.true.
export PARM_FV3DIAG=$FV3DIR_RELEASE/parm/parm_fv3diag
#export DIAG_TABLE=$FV3DIR/parm/chm_diag_table_gfdlmp
#ls -l $DIAG_TABLE
unset DIAG_TABLE
#export FORECASTSH=$FV3DIR_RELEASE/scripts/exglobal_fcst_nemsfv3gfs.current.sh         
export FORECASTSH=$FV3DIR_RELEASE/scripts/exglobal_fcst_nemsfv3gfs.current.ceds.sh         
export GSIREMAPSH=$FV3DIR_RELEASE/exp/runremapgsi.C192.AVER.sh

#---determine task configuration
#export npe_node_f=32                                   # number of pes per node 
#export task_per_node=$((npe_node_f/nth_f))
#export tasks=$((NODES*task_per_node))                  # number of tasks 
export tasks=$NTASKS
export NTHREADS_REMAP=$nth_f


export TYPE=nh         				       # hydrostatic option: nh, hydro
export HYPT=off           			       # hyperthreading:     on, off  
export COMP="prod"        			       # compiling mode:     debug, repro, prod
if [ ${HYPT} = on ]; then
   export hyperthread=".true."
   export j_opt="-j 2"
else
   export hyperthread=".false."
   export j_opt="-j 1"
fi
#export FCSTEXEC=fv3_gfs_${TYPE}.${COMP}.${MODE}.x
export FCSTEXEC=NEMS.x

cp $FV3DIR/NEMS/src/conf/module-setup.sh.inc module-setup.sh
cp $FV3DIR/NEMS/src/conf/modules.nems modules.fv3
source ./module-setup.sh >/dev/null 2>&1
module use $( pwd -P )
module load modules.fv3
# ajl put in short cut for now will fix later
module purge >/dev/null 2>&1
source $FV3DIR/NEMS/src/conf/source.modules.nems >/dev/null 2>&1
module list

export mpiexec=`which mpirun`
export mpiexec=`which srun`
#export FCST_LAUNCHER="$mpiexec -prepend-rank -np $PBS_NP"
export FCST_LAUNCHER="timeout 100m $mpiexec -s -l -n $NTASKS_EXE"
# ajl need also
export APRUN_FV3="timeout 60m $mpiexec -s -l -n $NTASKS_EXE"
echo APRUN_FV3 $APRUN_FV3

echo "Model started:  " `date`
ulimit -a
export MPI_TYPE_DEPTH=20
export OMP_STACKSIZE=912M
export OMP_NUM_THREADS=$nth_f
export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4
export FIELD_TABLE=$FV3DIR/parm/chm_field_table.tracers.full.gfdl
cat $FIELD_TABLE
#--------------------------------------------------------------------------
# start of while loop with restart every 6 hours
export CDATEBEG=$CDATE
export new_date=/home/lenzen/UTILS/da_advance_time.exe
CDATENEW=$($new_date $CDATE 6h)
echo CDATENEW $CDATENEW
export BASE_PATH=$BASE_OUT
export INIT_PATH=$BASE_OUT/INIT_DIR
mkdir -p $INIT_PATH
while (( CDATE < CDATEEND ))
  do
#   set up gsi name files for this gsi cycle
#export DHRGSI=1
  DHR=$DHRGSI
  export DATA=${SCRATCH_OUT}/RUNDIR/${CDATE}     
  mv $DATA $DATA.save
  mkdir -p $DATA
  echo DATA $DATA
  export RUNPATH=$DATA
  echo RUNPATH $RUNPATH
  export GSIDATAPATH=$RUNPATH
  echo RUNPATH $RUNPATH
#  while (( DHR <= 6 ))
#    do
#      export CDATEGSI=$($new_date $CDATE ${DHR}h)
#      echo CDATEGSI $CDATEGSI DHR $DHR
#      DHR=$(( DHR + DHRGSI ))
      #echo RUNPATH $RUNPATH
#      echo DHR $DHR
#      $GSI_DIR/sorc/gsi.fd/run/getnucapacofiles.sh >& $RUNPATH/outgetnucapsfiles.sh.$CDATEGSI

#    done

  export INIT_DIR=$INIT_PATH/$CDATE/
  export DATATRACE=$BASE_OUT/TRACER/$CDATE/
  export BASE_OUTPUT=/ships19/models2/
  export YYYYMMDD=`echo $CDATE | cut -c1-8`
  export YYYYMM=`echo $CDATE | cut -c1-6`
  export YYYY=`echo $CDATE | cut -c1-4`
  export HH=`echo $CDATE | cut -c9-10`
#  if (( YYYYMMDD <= 20190729 || YYYYMMDD >= 20190805 ))
#    then
#      export GBBEPxDIR=/ships19/aqda/lenzen/GBBEPx.in.FV3C384Grid/${YYYYMMDD}/
    #else
#      export GBBEPxDIR=/ships19/aqda/lenzen/GBBEPx.in.FV3C384Grid/Reprocessed/${YYYYMMDD}/
#  fi
  export GBBEPxDIR=/ships19/aqda/lenzen/GBBEPx.in.FV3C384Grid/FRPMEAN.AVE.NONZERO/${YYYY}/${YYYYMM}/${YYYYMMDD}/
  echo GBBEPxDIR $GBBEPxDIR
#  mkdir -p $BASE_OUT/REGRID.0.5/$CDATE/ $BASE_OUT/OUTREGRID/$CDATE/
  export DATAREGRID=$BASE_OUT/REGRID.0.5/$CDATE/
  export DATAOUTREGRID=$BASE_OUT/OUTREGRID/$CDATE/
  export emi_outname=$BASE_OUT/TRACER/$CDATE/
   echo two CDATE=$CDATE
  export gsi_path=$BASE_OUT/GSIDIR/$CDATE/
  export gsi_scratch=$SCRATCH_OUT/GSISCRATCH/$CDATE/
  mkdir -p $gsi_scratch
  mkdir -p $gsi_path
  /bin/rm -rf $emi_outname
  mkdir -p $emi_outname

# --execute the forecast
  $FORECASTSH >& $BASE_OUT/outfv3run.$CDATE
  if [ $? != 0 ]; then
    echo "forecast failed, exit"
    CDATENEW=$($new_date $CDATE 6h) 
    if [ ! -s RUNDONE.$CDATENEW ] ; then
      echo RUNDONE.$CDATENEW not found
      echo CDATE $CDATE CDATENEW $CDATENEW
      exit
    else
      echo had error code but RUNDONE.$CDATENEW is there so continue
    fi  
  fi

  echo "fcst job is done"

#-------------------------------------------------------------------------
#--convert 6-tile output to global arrary in netCDF format
ymd=`echo $CDATE |cut -c 1-8`
cyc=`echo $CDATE |cut -c 9-10`
export DATA=$ROTDIR/gfs.$ymd/$cyc
export IPD4=YES
#export REMAPSH=$FV3DIR_RELEASE/ush/fv3gfs_remap.sh            #remap 6-tile output to global array in netcdf
#export REMAPEXE=$FV3DIR_RELEASE/exec/fregrid_parallel
#export FIXDYNEXE=$FV3DIR_RELEASE/exec/fixdyn
##export REMAP_LAUNCHER="mpirun -prepend-rank -np $REMAP_TASKS"
#export REMAP_LAUNCHER="srun -prepend-rank -n $REMAP_TASKS"

#cp $FV3DIR_RELEASE/modulefiles/fv3gfs/fre-nctools.${machine} module.fre-nctools
#module load module.fre-nctools
#module list

#$REMAPSH
export REMAP05=$FV3DIR_RELEASE/ush/fv3gfs_remap.5degll.sh
#$REMAP05
export INC+6
sbatch --export=ALL -n1 --share -t 10 $REMAP05
# increment CDATE 6 hrs
CDATENEW=$($new_date $CDATE 6h)
echo new CDATENEW $CDATENEW
mkdir -p $IC_DIR/${CASE}_${CDATENEW}
# need to read fv3_trace for GFS_DIR for current date
# need to get met data for CDATENEW and combine
# need to store new data set in INIT_DATA directory and copy first time period into there
#export INIT_DATA=$IC_DIR/${CDATE}_${CDATENEW}/
export INIT_DATA=$IC_DIR/${CASE}_${CDATENEW}/
export DATATRACE=$BASE_OUT/TRACER/$CDATE/
export RESPATH=$ROTDIR/gfs.${YYYYMMDD}/${HH}/RESTART/
#mkdir -p /ships19/aqda/lenzen/OUTREMAP
mkdir -p $SCRATCH_OUT/OUTREMAP
echo CDATE $CDATE CDATE0 $CDATE0 CDATENEW $CDATENEW
export INC=1
export CMAX=6
export rc=
for (( i=1 ; i <= $CMAX ; i += $INC)); do
 export CTILE=$i
 echo $CTILE
/home/lenzen/UTILS/addchemtomet.$CASE.x $CDATENEW $CDATE0 >& $SCRATCH_OUT/OUTREMAP/outaddchem.tropomi.co.OMPS.VIIRS.AOD.$CDATE.$CTILE &
export rc=`echo $rc $!`
done
wait $rc
# try
export CDATE0=$CDATE
export CDATE=$CDATENEW

done
if (( CDATE >= CDATEENDRUN ))  
then
 exit 1
fi
sleep 120
export NEXTDAYRUN=$FV3DIR_RELEASE/exp/rundate.reloop.C192.OMPS.NO2.NOY.200.500.10X.STRAT.emissadj3.scr
$NEXTDAYRUN >& $SCRATCH_OUT/outrundaynext.CEDS.OMPS.NO2.NOY.200.500.10X.STRAT.emissadj3.$CDATE

exit 0

